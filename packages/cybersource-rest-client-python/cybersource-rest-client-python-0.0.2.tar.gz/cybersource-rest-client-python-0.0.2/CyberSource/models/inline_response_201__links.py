# coding: utf-8

"""
    CyberSource Flex API

    Simple PAN tokenization service

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse201Links(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_self': 'InlineResponse201LinksSelf',
        'reversal': 'InlineResponse201LinksSelf',
        'capture': 'InlineResponse201LinksSelf'
    }

    attribute_map = {
        '_self': 'self',
        'reversal': 'reversal',
        'capture': 'capture'
    }

    def __init__(self, _self=None, reversal=None, capture=None):
        """
        InlineResponse201Links - a model defined in Swagger
        """

        self.__self = None
        self._reversal = None
        self._capture = None

        if _self is not None:
          self._self = _self
        if reversal is not None:
          self.reversal = reversal
        if capture is not None:
          self.capture = capture

    @property
    def _self(self):
        """
        Gets the _self of this InlineResponse201Links.

        :return: The _self of this InlineResponse201Links.
        :rtype: InlineResponse201LinksSelf
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """
        Sets the _self of this InlineResponse201Links.

        :param _self: The _self of this InlineResponse201Links.
        :type: InlineResponse201LinksSelf
        """

        self.__self = _self

    @property
    def reversal(self):
        """
        Gets the reversal of this InlineResponse201Links.

        :return: The reversal of this InlineResponse201Links.
        :rtype: InlineResponse201LinksSelf
        """
        return self._reversal

    @reversal.setter
    def reversal(self, reversal):
        """
        Sets the reversal of this InlineResponse201Links.

        :param reversal: The reversal of this InlineResponse201Links.
        :type: InlineResponse201LinksSelf
        """

        self._reversal = reversal

    @property
    def capture(self):
        """
        Gets the capture of this InlineResponse201Links.

        :return: The capture of this InlineResponse201Links.
        :rtype: InlineResponse201LinksSelf
        """
        return self._capture

    @capture.setter
    def capture(self, capture):
        """
        Sets the capture of this InlineResponse201Links.

        :param capture: The capture of this InlineResponse201Links.
        :type: InlineResponse201LinksSelf
        """

        self._capture = capture

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse201Links):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
