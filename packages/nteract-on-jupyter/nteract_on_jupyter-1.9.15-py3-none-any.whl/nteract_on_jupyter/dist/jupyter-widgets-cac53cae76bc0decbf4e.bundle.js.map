{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/jupyter-widgets/src/index.js"],"names":["WidgetDisplay","_React$Component","_getPrototypeOf2","_this","_babel_runtime_corejs2_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_len","arguments","length","args","Array","_key","_babel_runtime_corejs2_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_corejs2_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","apply","concat","_babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_corejs2_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","React","createRef","_babel_runtime_corejs2_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_corejs2_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","key","value","container","current","nextProps","data","model_id","props","channels","createOrUpdateShim","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","ref","Component"],"mappings":"sRAoBaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,IAAAC,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAS,IAAAP,MAAAH,EAAAW,IAAAb,IAAAc,KAAAC,MAAAb,GAAAG,MAAAW,OAAAP,KAAAQ,IAAAC,QAAAf,IAAA,YAUkDgB,IAAMC,aAVxDjB,EAAA,OAAAkB,IAAArB,EAAAC,GAAAqB,IAAAtB,IAAAuB,IAAA,oBAAAC,MAAA,WAcSnB,KAAKoB,UAAUC,WAdxBH,IAAA,uBAAAC,MAAA,eAAAD,IAAA,wBAAAC,MAAA,SA8BwBG,GAEpB,OAAIA,EAAUC,KAAKC,WAAaxB,KAAKyB,MAAMF,KAAKC,UAM5CF,EAAUI,WAAa1B,KAAKyB,MAAMC,YAtC1CR,IAAA,SAAAC,MAAA,WAiDI,OAFAnB,KAAK2B,qBAGHC,EAAAC,EAAAC,cAAA,+DAEEF,EAAAC,EAAAC,cAAA,OAAKC,IAAK/B,KAAKoB,gBApDvBF,IAAA,qBAAAC,MAAA,gBAAAxB,EAAA,CAAmCmB,IAAMkB,eAA5BrC,aACO","file":"jupyter-widgets-cac53cae76bc0decbf4e.bundle.js","sourcesContent":["/* @flow */\nimport React from \"react\";\n// import { OuterShim } from \"./outer-shim\";\n\ntype Props = {\n  data: { model_id: string },\n  channels: rxjs$Subject<any>\n};\n\n/**\n * Component used to render a widget view.\n *\n * Given a kernel and widget model id, this component will render a widget\n * view for the widget model. The widget view and widget models are isolated to\n * a cross domain iframe. Since they have access to the kernel, they are capable\n * of communicating directly with the kernel instance which makes them atypical.\n *\n * Even though it may appear to be pure, since it doesn't have react state, this\n * component's iframe maintains it's own state in communication with the kernel.\n */\nexport class WidgetDisplay extends React.Component<Props, null> {\n  static MIMETYPE = \"application/vnd.jupyter.widget-view+json\";\n\n  // TODO: Uncomment this and related code in a follow-up PR.\n  // The outer shim is responsable for managing the rendered cross domain\n  // iframe, communicating with it, and relaying information to and from the\n  // kernel.\n  // shim: OuterShim;\n\n  // A reference to the div which we can inject the cross domain widget iframe.\n  container: { current: null | HTMLDivElement } = React.createRef();\n\n  /** @override */\n  componentDidMount() {\n    if (!this.container.current) return;\n\n    // When the component has mounted, inject the widget iframe.\n    // const view = this.shim.getView();\n    // this.container.current.appendChild(view);\n  }\n\n  /** @override */\n  componentWillUnmount() {\n    // if (this.shim) {\n    //   this.shim.dispose();\n    //   delete this.shim;\n    // }\n  }\n\n  /** @override */\n  shouldComponentUpdate(nextProps: Props): boolean {\n    // Only update if the model_id or kernel_id have changed.\n    if (nextProps.data.model_id !== this.props.data.model_id) {\n      return true;\n    }\n\n    // If the channels have changed, we need to make sure that we connect the\n    // shim to the new channels.\n    if (nextProps.channels !== this.props.channels) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /** @override */\n  render(): ?React$Element<any> {\n    this.createOrUpdateShim();\n\n    return (\n      <pre>\n        Jupyter-Widgets are not yet supported in nteract.\n        <div ref={this.container} />\n      </pre>\n    );\n  }\n\n  /**\n   * Creates or updates the existing shim to the current model id and kernel.\n   */\n  createOrUpdateShim() {\n    // if (!this.shim) {\n    //   this.shim = new OuterShim();\n    // }\n    // this.shim.setCommMsgsSubject(this.props.channels);\n    // this.shim.setModelId(this.props.data.model_id);\n  }\n}\n"],"sourceRoot":""}