{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/richest-mime.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/output.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/display.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/index.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/monaco-editor/src/index.js"],"names":["richest_mime_Fallback","_ref","componentStack","error","react_default","a","createElement","style","backgroundColor","color","fontWeight","display","padding","marginBottom","toString","richest_mime_RichestMime","RichestMime","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","state","info","setState","mimetype","Object","src","bundle","displayOrder","transforms","Transform","data","metadata","theme","models","Component","output_Output","nextProps","output","immutable_es","toJS","output_type","text","name","ansi_to_react_src","className","traceback","classPrefix","join","concat","ename","evalue","display_Display","_this$props","isHidden","outputs","objectWithoutProperties_default","maxHeight","expanded","overflowY","map","index","extends_default","key","PureComponent","__webpack_require__","d","__webpack_exports__","MonacoEditor","_babel_runtime_corejs2_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_corejs2_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_corejs2_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","componentWillReceiveProps","lodash__WEBPACK_IMPORTED_MODULE_13__","e","monaco","onChange","getValue","monaco_editor__WEBPACK_IMPORTED_MODULE_14__","create","monacoContainer","value","language","mode","minimap","enabled","autoIndent","editorFocused","focus","onDidChangeModelContent","bind","prevProps","setValue","updateOptions","dispose","react__WEBPACK_IMPORTED_MODULE_6__","ref","container"],"mappings":"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","file":"monaco-editor-982a622104b5a56d2b0f.bundle.js","sourcesContent":["// @flow\nimport React from \"react\";\n\nimport { richestMimetype, transforms, displayOrder } from \"@nteract/transforms\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  transforms: Object,\n  bundle: Object,\n  metadata: Object,\n  theme: string,\n  models?: Object\n};\n\ntype ErrorInfo = {\n  componentStack: string\n};\n\ntype State = {\n  error: ?Error,\n  info: ?ErrorInfo\n};\n\ntype FallbackProps = {\n  componentStack: string,\n  error: Error\n};\n\nconst Fallback = ({ componentStack, error }: FallbackProps) => (\n  <div\n    style={{\n      backgroundColor: \"ghostwhite\",\n      color: \"black\",\n      fontWeight: \"600\",\n      display: \"block\",\n      padding: \"10px\",\n      marginBottom: \"20px\"\n    }}\n  >\n    <h3> Error: {error.toString()}</h3>\n    <details>\n      <summary>stack trace</summary>\n      <pre>{componentStack}</pre>\n    </details>\n  </div>\n);\n\nexport default class RichestMime extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      info: null\n    };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.setState({ error, info });\n  }\n\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    theme: \"light\",\n    metadata: {},\n    bundle: {},\n    models: {}\n  };\n\n  render(): ?React$Element<any> | null {\n    if (this.state.error) {\n      return (\n        <Fallback\n          componentStack={this.state.info ? this.state.info.componentStack : \"\"}\n          error={this.state.error}\n        />\n      );\n    }\n\n    const mimetype = richestMimetype(\n      this.props.bundle,\n      this.props.displayOrder,\n      this.props.transforms\n    );\n\n    if (!mimetype) {\n      // If no mimetype is supported, don't return an element\n      return null;\n    }\n\n    const Transform = this.props.transforms[mimetype];\n    const data = this.props.bundle[mimetype];\n    const metadata = this.props.metadata[mimetype];\n    return (\n      <Transform\n        data={data}\n        metadata={metadata}\n        theme={this.props.theme}\n        models={this.props.models}\n      />\n    );\n  }\n}\n","// @flow\nimport React from \"react\";\nimport Ansi from \"ansi-to-react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport RichestMime from \"./richest-mime\";\n\nimport * as Immutable from \"immutable\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  output: any,\n  transforms: Object,\n  theme: string,\n  models: Object\n};\n\nconst classPrefix = \"nteract-display-area-\";\n\nexport default class Output extends React.Component<Props, null> {\n  static defaultProps = {\n    models: {},\n    theme: \"light\",\n    transforms,\n    displayOrder\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      // NOTE: this only does a shallow comparison that mostly only works\n      //       well for Immutable Outputs\n      nextProps.output !== this.props.output ||\n      nextProps.displayOrder !== this.props.displayOrder ||\n      nextProps.transforms !== this.props.transforms ||\n      nextProps.theme !== this.props.theme ||\n      nextProps.models !== this.props.models\n    );\n  }\n\n  render() {\n    let output = this.props.output;\n    let models = this.props.models;\n\n    // TODO: Incorporate the new output record types into both commutable and the react components that use them\n    if (Immutable.isImmutable(output)) {\n      output = output.toJS();\n    }\n    if (Immutable.isImmutable(models)) {\n      models = models.toJS();\n    }\n\n    const outputType = output.output_type;\n\n    switch (outputType) {\n      case \"execute_result\":\n      // We can defer to display data here, the cell number will be handled\n      // separately. For reference, it is output.execution_count\n      // The execution_count belongs in the component above if\n      // this is a code cell\n\n      // falls through\n      case \"display_data\": {\n        const bundle = output.data;\n        const metadata = output.metadata;\n        return (\n          <RichestMime\n            bundle={bundle}\n            metadata={metadata}\n            displayOrder={this.props.displayOrder}\n            transforms={this.props.transforms}\n            theme={this.props.theme}\n            models={models}\n          />\n        );\n      }\n      case \"stream\": {\n        const text = output.text;\n        const name = output.name;\n        switch (name) {\n          case \"stdout\":\n          case \"stderr\":\n            return <Ansi className={classPrefix + name}>{text}</Ansi>;\n          default:\n            return null;\n        }\n      }\n      case \"error\": {\n        const traceback = output.traceback;\n        if (!traceback) {\n          return (\n            <Ansi className={classPrefix + \"traceback\"}>{`${output.ename}: ${\n              output.evalue\n            }`}</Ansi>\n          );\n        }\n        return (\n          <Ansi className={classPrefix + \"traceback\"}>\n            {traceback.join(\"\\n\")}\n          </Ansi>\n        );\n      }\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport React from \"react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport * as Immutable from \"immutable\";\n\nimport Output from \"./output\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  outputs: Array<any>,\n  transforms: Object,\n  theme: string,\n  expanded: boolean,\n  isHidden: boolean,\n  models: Object\n};\n\nexport const DEFAULT_SCROLL_HEIGHT = 600;\n\nexport default class Display extends React.PureComponent<Props> {\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    isHidden: false,\n    expanded: false,\n    theme: \"light\",\n    models: Immutable.Map()\n  };\n\n  render() {\n    const { isHidden, outputs, ...props } = this.props;\n\n    if (!isHidden) {\n      return (\n        <div\n          className=\"cell_display\"\n          style={{\n            maxHeight: props.expanded ? \"100%\" : `${DEFAULT_SCROLL_HEIGHT}px`,\n            overflowY: \"auto\"\n          }}\n        >\n          {outputs\n            ? outputs.map((output, index) => (\n                <Output key={index} output={output} {...props} />\n              ))\n            : null}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","// @flow\nimport Display from \"./display\";\nimport RichestMime from \"./richest-mime\";\nimport Output from \"./output\";\n\nexport { Display, RichestMime, Output };\n","// @flow\n/* eslint-disable class-methods-use-this */\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { of } from \"rxjs/observable/of\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport type { Subscription } from \"rxjs/Subscription\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { Map as ImmutableMap } from \"immutable\";\n\nimport { RichestMime } from \"@nteract/display-area\";\n\nimport { debounce, merge } from \"lodash\";\n\nimport * as monaco from \"monaco-editor\";\n\nfunction normalizeLineEndings(str) {\n  if (!str) return str;\n  return str.replace(/\\r\\n|\\r/g, \"\\n\");\n}\n\nexport type MonacoEditorProps = {\n  theme: string,\n  mode: ?string,\n  onChange: (value: string) => void,\n  value: string,\n  editorFocused: boolean\n};\n\nclass MonacoEditor extends React.Component<MonacoEditorProps> {\n  monaco: ?monaco.IStandaloneCodeEditor;\n  monacoContainer: ?HTMLElement;\n\n  static defaultProps = {\n    onChange: (value: string) => {},\n    editorFocused: false,\n    mode: \"text/plain\"\n  };\n\n  constructor(props: MonacoEditorProps): void {\n    super(props);\n  }\n\n  componentWillMount() {\n    (this: any).componentWillReceiveProps = debounce(\n      this.componentWillReceiveProps,\n      0\n    );\n  }\n\n  onDidChangeModelContent(e: any): void {\n    if (this.monaco && this.props.onChange) {\n      this.props.onChange(this.monaco.getValue());\n    }\n  }\n\n  componentDidMount(): void {\n    this.monaco = monaco.editor.create(this.monacoContainer, {\n      value: this.props.value,\n      language: this.props.mode,\n      theme: this.props.theme,\n      minimap: {\n        enabled: false\n      },\n      autoIndent: true\n    });\n\n    if (this.props.editorFocused) {\n      this.monaco.focus();\n    }\n\n    this.monaco.onDidChangeModelContent(\n      this.onDidChangeModelContent.bind(this)\n    );\n  }\n\n  componentDidUpdate(prevProps: MonacoEditorProps): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    if (this.monaco.getValue() !== this.props.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      // $FlowFixMe: We should be detecting monaco above\n      this.monaco.setValue(this.props.value);\n    }\n\n    // $FlowFixMe: We should be detecting monaco above\n    this.monaco.updateOptions({\n      language: this.props.mode,\n      theme: this.props.theme\n    });\n  }\n\n  componentWillReceiveProps(nextProps: MonacoEditorProps) {\n    if (this.monaco && this.monaco.getValue() !== nextProps.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      this.monaco.setValue(nextProps.value);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.monaco) {\n      this.monaco.dispose();\n    }\n  }\n\n  render(): React$Element<any> {\n    return (\n      <div\n        className=\"monaco cm-s-composition\"\n        ref={container => {\n          this.monacoContainer = container;\n        }}\n      />\n    );\n  }\n}\n\nexport default MonacoEditor;\n"],"sourceRoot":""}