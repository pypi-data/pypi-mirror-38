{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/vega-embed2/src/index.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-vega/src/index.js"],"names":["src","DEFAULT_WIDTH","DEFAULT_HEIGHT","transform_vega_src_embed","el","spec","mode","version","cb","embedSpec","assign_default","config","Object","lodash","cell","width","height","build_embed","actions","then","result","catch","src_VegaEmbed","_React$Component","VegaEmbed","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","apply","arguments","inherits_default","createClass_default","key","value","props","data","embedMode","renderedCallback","nextProps","_this","react","ref","VegaLite1","Vega2","VegaLite2","Vega3","MIMETYPE"],"mappings":"qYAEeA,SAAf,sRCKA,IAKMC,EAAgB,IAChBC,EAAiBD,EAAgB,IAWvC,SAASE,EACPC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAe,SAAXD,EAAoB,CACtB,IAAME,GACJH,OACAD,KAAMK,OAAkBL,IAGb,cAATC,IACFG,EAAUJ,KAAKM,OAASC,OAAAC,EAAA,MAAAD,EAEpBE,MACEC,MAAOd,EACPe,OAAQd,IAGZO,EAAUJ,KAAKM,SAInBX,EAAWI,EAAIK,EAAWD,QAE1BH,EAAOK,OAAkBL,GACZ,cAATC,IACFD,EAAKM,OAASC,OAAAC,EAAA,MAAAD,EAEVE,MACEC,MAAOd,EACPe,OAAQd,IAGZG,EAAKM,SAITC,OAAAK,EAAA,EAAAL,CAAWR,EAAIC,GACbC,KAAMA,EACNY,SAAS,IAERC,KAAK,SAAAC,GAAM,OAAIZ,EAAG,KAAMY,KACxBC,MAAMb,GAIN,IAAMc,EAAb,SAAAC,GAAA,SAAAC,IAAA,OAAAC,IAAAC,KAAAF,GAAAG,IAAAD,KAAAE,IAAAJ,GAAAK,MAAAH,KAAAI,YAAA,OAAAC,IAAAP,EAAAD,GAAAS,IAAAR,IAAAS,IAAA,oBAAAC,MAAA,WAUQR,KAAKtB,IACPD,EACEuB,KAAKtB,GACLsB,KAAKS,MAAMC,KACXV,KAAKS,MAAME,UACXX,KAAKS,MAAM5B,QACXmB,KAAKS,MAAMG,qBAhBnBL,IAAA,wBAAAC,MAAA,SAqBwBK,GACpB,OAAOb,KAAKS,MAAMC,OAASG,EAAUH,QAtBzCH,IAAA,qBAAAC,MAAA,WA0BQR,KAAKtB,IACPD,EACEuB,KAAKtB,GACLsB,KAAKS,MAAMC,KACXV,KAAKS,MAAME,UACXX,KAAKS,MAAM5B,QACXmB,KAAKS,MAAMG,qBAhCnBL,IAAA,SAAAC,MAAA,WAqCgC,IAAAM,EAAAd,KAI5B,OACEe,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,2BAAQ,mCACRA,EAAA,qBACEC,IAAK,SAAAtC,GACHoC,EAAKpC,GAAKA,UA9CtBoB,EAAA,CAA+BiB,EAAA,WA0DxB,SAASE,EAAUR,GACxB,OAAOM,EAAA,cAACnB,GAAUc,KAAMD,EAAMC,KAAMC,UAAU,YAAY9B,QAAQ,UAK7D,SAASqC,EAAMT,GACpB,OAAOM,EAAA,cAACnB,GAAUc,KAAMD,EAAMC,KAAMC,UAAU,OAAO9B,QAAQ,UAQxD,SAASsC,EAAUV,GACxB,OAAOM,EAAA,cAACnB,GAAUc,KAAMD,EAAMC,KAAMC,UAAU,YAAY9B,QAAQ,UAK7D,SAASuC,EAAMX,GACpB,OAAOM,EAAA,cAACnB,GAAUc,KAAMD,EAAMC,KAAMC,UAAU,OAAO9B,QAAQ,cAhFlDe,kBAITgB,iBAvDoB,aAwDpBD,UAAW,YACX9B,QAAS,UAwDboC,EAAUI,SA9HiB,mCAoI3BH,EAAMG,SAtIiB,+BA+IvBF,EAAUE,SA5IiB,mCAkJ3BD,EAAMC,SApJiB","file":"vega-transform-093a804350bad85be324.bundle.js","sourcesContent":["// @flow\nimport vegaEmbed from \"vega-embed\";\nexport default vegaEmbed;\n","/* @flow */\nimport * as React from \"react\";\n\nimport { merge } from \"lodash\";\nimport vegaEmbed2 from \"@nteract/vega-embed2\";\nimport vegaEmbed3 from \"vega-embed\";\n\nconst MIMETYPE_VEGA2 = \"application/vnd.vega.v2+json\";\nconst MIMETYPE_VEGA3 = \"application/vnd.vega.v3+json\";\nconst MIMETYPE_VEGALITE1 = \"application/vnd.vegalite.v1+json\";\nconst MIMETYPE_VEGALITE2 = \"application/vnd.vegalite.v2+json\";\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH / 1.5;\n\ntype EmbedProps = {\n  data: Object,\n  embedMode: string,\n  version: string,\n  renderedCallback: (err: any, result: any) => any\n};\n\nconst defaultCallback = (): any => {};\n\nfunction embed(\n  el: HTMLElement,\n  spec: Object,\n  mode: string,\n  version: string,\n  cb: (err: any, result: any) => any\n) {\n  if (version == \"vega2\") {\n    const embedSpec = {\n      mode,\n      spec: Object.assign({}, spec)\n    };\n\n    if (mode === \"vega-lite\") {\n      embedSpec.spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        embedSpec.spec.config\n      );\n    }\n\n    vegaEmbed2(el, embedSpec, cb);\n  } else {\n    spec = Object.assign({}, spec);\n    if (mode === \"vega-lite\") {\n      spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        spec.config\n      );\n    }\n\n    vegaEmbed3(el, spec, {\n      mode: mode,\n      actions: false\n    })\n      .then(result => cb(null, result))\n      .catch(cb);\n  }\n}\n\nexport class VegaEmbed extends React.Component<EmbedProps> {\n  el: ?HTMLElement;\n\n  static defaultProps = {\n    renderedCallback: defaultCallback,\n    embedMode: \"vega-lite\",\n    version: \"vega2\"\n  };\n\n  componentDidMount(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: EmbedProps): boolean {\n    return this.props.data !== nextProps.data;\n  }\n\n  componentDidUpdate(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  render(): ?React$Element<any> {\n    // Note: We hide vega-actions since they won't work in our environment\n    // (this is only needed for vega2, since vega-embed v3 supports hiding\n    // actions via options)\n    return (\n      <React.Fragment>\n        <style>{\".vega-actions{ display: none; }\"}</style>\n        <div\n          ref={el => {\n            this.el = el;\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props = {\n  data: Object\n};\n\nexport function VegaLite1(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega2\" />;\n}\n\nVegaLite1.MIMETYPE = MIMETYPE_VEGALITE1;\n\nexport function Vega2(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega2\" />;\n}\n\nVega2.MIMETYPE = MIMETYPE_VEGA2;\n\n// For backwards compatibility\nexport { VegaLite1 as VegaLite, Vega2 as Vega };\n\nexport function VegaLite2(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega3\" />;\n}\n\nVegaLite2.MIMETYPE = MIMETYPE_VEGALITE2;\n\nexport function Vega3(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega3\" />;\n}\n\nVega3.MIMETYPE = MIMETYPE_VEGA3;\n"],"sourceRoot":""}