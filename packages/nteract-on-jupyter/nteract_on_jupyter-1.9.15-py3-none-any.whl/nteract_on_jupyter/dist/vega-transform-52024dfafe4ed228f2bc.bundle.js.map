{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/vega-embed2/src/index.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-vega/src/index.js"],"names":["__webpack_require__","vegaEmbed","VegaLite1","Vega2","VegaLite2","Vega3","React","_lodash","DEFAULT_WIDTH","DEFAULT_HEIGHT","embed","el","spec","mode","version","cb","embedSpec","Object","assign","config","merge","cell","width","height","_vegaEmbed2","default","_vegaEmbed4","actions","then","result","catch","VegaEmbed","Component","this","props","data","embedMode","renderedCallback","nextProps","_this2","createElement","Fragment","ref","defaultProps","MIMETYPE","VegaLite","Vega"],"mappings":"kKACA,wDAAAA,EAAA,iBACeC,2fCiICC,cAMAC,UASAC,cAMAC,QAvJhB,IAAYC,0JAAZN,EAAA,IAEAO,EAAAP,EAAA,QACAA,EAAA,WACAA,EAAA,0DAEA,IAKMQ,EAAgB,IAChBC,EAAiBD,EAAgB,IAWvC,SAASE,EACPC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAe,SAAXD,EAAoB,CACtB,IAAME,GACJH,OACAD,KAAMK,OAAOC,UAAWN,IAGb,cAATC,IACFG,EAAUJ,KAAKO,QAAS,EAAAZ,EAAAa,QAEpBC,MACEC,MAAOd,EACPe,OAAQd,IAGZO,EAAUJ,KAAKO,UAInB,EAAAK,EAAAC,SAAWd,EAAIK,EAAWD,QAE1BH,EAAOK,OAAOC,UAAWN,GACZ,cAATC,IACFD,EAAKO,QAAS,EAAAZ,EAAAa,QAEVC,MACEC,MAAOd,EACPe,OAAQd,IAGZG,EAAKO,UAIT,EAAAO,EAAAD,SAAWd,EAAIC,GACbC,KAAMA,EACNc,SAAS,IAERC,KAAK,SAAAC,GAAA,OAAUd,EAAG,KAAMc,KACxBC,MAAMf,OAIAgB,4rBAAkBzB,EAAM0B,0DAU7BC,KAAKtB,IACPD,EACEuB,KAAKtB,GACLsB,KAAKC,MAAMC,KACXF,KAAKC,MAAME,UACXH,KAAKC,MAAMpB,QACXmB,KAAKC,MAAMG,gEAKKC,GACpB,OAAOL,KAAKC,MAAMC,OAASG,EAAUH,kDAIjCF,KAAKtB,IACPD,EACEuB,KAAKtB,GACLsB,KAAKC,MAAMC,KACXF,KAAKC,MAAME,UACXH,KAAKC,MAAMpB,QACXmB,KAAKC,MAAMG,mDAKa,IAAAE,EAAAN,KAI5B,OACE3B,EAAAkC,cAAClC,EAAMmC,SAAP,KACEnC,EAAAkC,cAAA,aAAQ,mCACRlC,EAAAkC,cAAA,OACEE,IAAK,SAAA/B,GACH4B,EAAK5B,GAAKA,eAYf,SAAST,EAAUgC,GACxB,OAAO5B,EAAAkC,cAACT,GAAUI,KAAMD,EAAMC,KAAMC,UAAU,YAAYtB,QAAQ,UAK7D,SAASX,EAAM+B,GACpB,OAAO5B,EAAAkC,cAACT,GAAUI,KAAMD,EAAMC,KAAMC,UAAU,OAAOtB,QAAQ,UAQxD,SAASV,EAAU8B,GACxB,OAAO5B,EAAAkC,cAACT,GAAUI,KAAMD,EAAMC,KAAMC,UAAU,YAAYtB,QAAQ,UAK7D,SAAST,EAAM6B,GACpB,OAAO5B,EAAAkC,cAACT,GAAUI,KAAMD,EAAMC,KAAMC,UAAU,OAAOtB,QAAQ,UAhFlDiB,EAGJY,cACLN,iBAvDoB,aAwDpBD,UAAW,YACXtB,QAAS,SAwDbZ,EAAU0C,SA9HiB,mCAoI3BzC,EAAMyC,SAtIiB,iCAyIDC,SAAb3C,IAAgC4C,KAAT3C,EAMhCC,EAAUwC,SA5IiB,mCAkJ3BvC,EAAMuC,SApJiB","file":"vega-transform-52024dfafe4ed228f2bc.bundle.js","sourcesContent":["// @flow\nimport vegaEmbed from \"vega-embed\";\nexport default vegaEmbed;\n","/* @flow */\nimport * as React from \"react\";\n\nimport { merge } from \"lodash\";\nimport vegaEmbed2 from \"@nteract/vega-embed2\";\nimport vegaEmbed3 from \"vega-embed\";\n\nconst MIMETYPE_VEGA2 = \"application/vnd.vega.v2+json\";\nconst MIMETYPE_VEGA3 = \"application/vnd.vega.v3+json\";\nconst MIMETYPE_VEGALITE1 = \"application/vnd.vegalite.v1+json\";\nconst MIMETYPE_VEGALITE2 = \"application/vnd.vegalite.v2+json\";\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH / 1.5;\n\ntype EmbedProps = {\n  data: Object,\n  embedMode: string,\n  version: string,\n  renderedCallback: (err: any, result: any) => any\n};\n\nconst defaultCallback = (): any => {};\n\nfunction embed(\n  el: HTMLElement,\n  spec: Object,\n  mode: string,\n  version: string,\n  cb: (err: any, result: any) => any\n) {\n  if (version == \"vega2\") {\n    const embedSpec = {\n      mode,\n      spec: Object.assign({}, spec)\n    };\n\n    if (mode === \"vega-lite\") {\n      embedSpec.spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        embedSpec.spec.config\n      );\n    }\n\n    vegaEmbed2(el, embedSpec, cb);\n  } else {\n    spec = Object.assign({}, spec);\n    if (mode === \"vega-lite\") {\n      spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        spec.config\n      );\n    }\n\n    vegaEmbed3(el, spec, {\n      mode: mode,\n      actions: false\n    })\n      .then(result => cb(null, result))\n      .catch(cb);\n  }\n}\n\nexport class VegaEmbed extends React.Component<EmbedProps> {\n  el: ?HTMLElement;\n\n  static defaultProps = {\n    renderedCallback: defaultCallback,\n    embedMode: \"vega-lite\",\n    version: \"vega2\"\n  };\n\n  componentDidMount(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: EmbedProps): boolean {\n    return this.props.data !== nextProps.data;\n  }\n\n  componentDidUpdate(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  render(): ?React$Element<any> {\n    // Note: We hide vega-actions since they won't work in our environment\n    // (this is only needed for vega2, since vega-embed v3 supports hiding\n    // actions via options)\n    return (\n      <React.Fragment>\n        <style>{\".vega-actions{ display: none; }\"}</style>\n        <div\n          ref={el => {\n            this.el = el;\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props = {\n  data: Object\n};\n\nexport function VegaLite1(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega2\" />;\n}\n\nVegaLite1.MIMETYPE = MIMETYPE_VEGALITE1;\n\nexport function Vega2(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega2\" />;\n}\n\nVega2.MIMETYPE = MIMETYPE_VEGA2;\n\n// For backwards compatibility\nexport { VegaLite1 as VegaLite, Vega2 as Vega };\n\nexport function VegaLite2(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega3\" />;\n}\n\nVegaLite2.MIMETYPE = MIMETYPE_VEGALITE2;\n\nexport function Vega3(props: Props) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega3\" />;\n}\n\nVega3.MIMETYPE = MIMETYPE_VEGA3;\n"],"sourceRoot":""}