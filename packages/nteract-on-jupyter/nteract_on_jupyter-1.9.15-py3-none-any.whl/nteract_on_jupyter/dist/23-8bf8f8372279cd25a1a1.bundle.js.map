{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/node_modules/monaco-editor/esm/vs/language/html/htmlMode.js"],"names":["Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","languageId","label","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","p","completeCallback","errorCallback","r","c","e","then","toShallowCancelPromise","client","_","withSyncedResources","Range","Uri","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","d","resource","worker","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","promise","cancel","onCancellationRequested","setupMode","uris","apply","registerCompletionItemProvider","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"23-8bf8f8372279cd25a1a1.bundle.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n"],"sourceRoot":""}