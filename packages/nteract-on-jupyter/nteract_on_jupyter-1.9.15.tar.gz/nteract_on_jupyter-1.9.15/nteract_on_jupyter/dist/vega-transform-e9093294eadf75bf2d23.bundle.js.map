{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-vega/src/index.js"],"names":["MIMETYPE_VEGA2","DEFAULT_WIDTH","DEFAULT_HEIGHT","embed","el","spec","mode","version","cb","embedSpec","_babel_runtime_corejs2_core_js_object_assign__WEBPACK_IMPORTED_MODULE_7___default","config","merge","cell","width","height","vegaEmbed2","vegaEmbed3","actions","then","result","catch","VegaEmbed","_React$Component","_getPrototypeOf2","_this","_babel_runtime_corejs2_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_len","arguments","length","args","Array","_key","_babel_runtime_corejs2_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_corejs2_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","apply","concat","_babel_runtime_corejs2_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_corejs2_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_corejs2_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_corejs2_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","key","value","props","data","embedMode","renderedCallback","nextProps","_this2","react__WEBPACK_IMPORTED_MODULE_8__","ref","React","VegaLite1","Vega2","VegaLite2","Vega3","MIMETYPE","defaultProps","mediaType"],"mappings":"spBAMMA,EAAiB,+BAKjBC,EAAgB,IAChBC,EAAiBD,EAAgB,IAWvC,SAASE,EACPC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAe,SAAXD,EAAoB,CACtB,IAAME,GACJH,OACAD,KAAMK,OAAkBL,IAGb,cAATC,IACFG,EAAUJ,KAAKM,OAASC,iBAEpBC,MACEC,MAAOb,EACPc,OAAQb,IAGZO,EAAUJ,KAAKM,SAInBK,YAAWZ,EAAIK,EAAWD,QAE1BH,EAAOK,OAAkBL,GACZ,cAATC,IACFD,EAAKM,OAASC,iBAEVC,MACEC,MAAOb,EACPc,OAAQb,IAGZG,EAAKM,SAITM,YAAWb,EAAIC,GACbC,KAAMA,EACNY,SAAS,IAERC,KAAK,SAAAC,GAAM,OAAIZ,EAAG,KAAMY,KACxBC,MAAMb,GAIN,IAAMc,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,IAAAC,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAS,IAAAP,MAAAH,EAAAW,IAAAb,IAAAc,KAAAC,MAAAb,GAAAG,MAAAW,OAAAP,KAAAQ,IAAAC,QAAAf,IAAA,aAAAA,EAAA,OAAAgB,IAAAnB,EAAAC,GAAAmB,IAAApB,IAAAqB,IAAA,oBAAAC,MAAA,WAUQjB,KAAKvB,IACPD,EACEwB,KAAKvB,GACLuB,KAAKkB,MAAMC,KACXnB,KAAKkB,MAAME,UACXpB,KAAKkB,MAAMtC,QACXoB,KAAKkB,MAAMG,qBAhBnBL,IAAA,wBAAAC,MAAA,SAqBwBK,GACpB,OAAOtB,KAAKkB,MAAMC,OAASG,EAAUH,QAtBzCH,IAAA,qBAAAC,MAAA,WA0BQjB,KAAKvB,IACPD,EACEwB,KAAKvB,GACLuB,KAAKkB,MAAMC,KACXnB,KAAKkB,MAAME,UACXpB,KAAKkB,MAAMtC,QACXoB,KAAKkB,MAAMG,qBAhCnBL,IAAA,SAAAC,MAAA,WAqCgC,IAAAM,EAAAvB,KAI5B,OACEwB,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,2BAAQ,mCACRA,EAAA,qBACEC,IAAK,SAAAhD,GACH8C,EAAK9C,GAAKA,UA9CtBkB,EAAA,CAA+B+B,aA2DxB,SAASC,EAAUT,GACxB,OAAOM,EAAA,cAAC7B,GAAUwB,KAAMD,EAAMC,KAAMC,UAAU,YAAYxC,QAAQ,UAO7D,SAASgD,EAAMV,GACpB,OAAOM,EAAA,cAAC7B,GAAUwB,KAAMD,EAAMC,KAAMC,UAAU,OAAOxC,QAAQ,UAUxD,SAASiD,EAAUX,GACxB,OAAOM,EAAA,cAAC7B,GAAUwB,KAAMD,EAAMC,KAAMC,UAAU,YAAYxC,QAAQ,UAO7D,SAASkD,EAAMZ,GACpB,OAAOM,EAAA,cAAC7B,GAAUwB,KAAMD,EAAMC,KAAMC,UAAU,OAAOxC,QAAQ,cAvFlDe,kBAIT0B,iBAvDoB,aAwDpBD,UAAW,YACXxC,QAAS,UAwDb+C,EAAUI,SA9HiB,mCA+H3BJ,EAAUK,cACRC,UAAW5D,GAMbuD,EAAMG,SAAW1D,EACjBuD,EAAMI,cACJC,UAAW5D,GASbwD,EAAUE,SAhJiB,mCAiJ3BF,EAAUG,cACRC,UAlJyB,oCAwJ3BH,EAAMC,SA1JiB,+BA2JvBD,EAAME,cACJC,UA5JqB","file":"vega-transform-e9093294eadf75bf2d23.bundle.js","sourcesContent":["/* @flow */\nimport * as React from \"react\";\nimport { merge } from \"lodash\";\nimport vegaEmbed2 from \"@nteract/vega-embed-v2\";\nimport vegaEmbed3 from \"vega-embed\";\n\nconst MIMETYPE_VEGA2 = \"application/vnd.vega.v2+json\";\nconst MIMETYPE_VEGA3 = \"application/vnd.vega.v3+json\";\nconst MIMETYPE_VEGALITE1 = \"application/vnd.vegalite.v1+json\";\nconst MIMETYPE_VEGALITE2 = \"application/vnd.vegalite.v2+json\";\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH / 1.5;\n\ntype EmbedProps = {\n  data: Object,\n  embedMode: string,\n  version: string,\n  renderedCallback: (err: any, result: any) => any\n};\n\nconst defaultCallback = (): any => {};\n\nfunction embed(\n  el: HTMLElement,\n  spec: Object,\n  mode: string,\n  version: string,\n  cb: (err: any, result: any) => any\n) {\n  if (version == \"vega2\") {\n    const embedSpec = {\n      mode,\n      spec: Object.assign({}, spec)\n    };\n\n    if (mode === \"vega-lite\") {\n      embedSpec.spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        embedSpec.spec.config\n      );\n    }\n\n    vegaEmbed2(el, embedSpec, cb);\n  } else {\n    spec = Object.assign({}, spec);\n    if (mode === \"vega-lite\") {\n      spec.config = merge(\n        {\n          cell: {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n          }\n        },\n        spec.config\n      );\n    }\n\n    vegaEmbed3(el, spec, {\n      mode: mode,\n      actions: false\n    })\n      .then(result => cb(null, result))\n      .catch(cb);\n  }\n}\n\nexport class VegaEmbed extends React.Component<EmbedProps> {\n  el: ?HTMLElement;\n\n  static defaultProps = {\n    renderedCallback: defaultCallback,\n    embedMode: \"vega-lite\",\n    version: \"vega2\"\n  };\n\n  componentDidMount(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: EmbedProps): boolean {\n    return this.props.data !== nextProps.data;\n  }\n\n  componentDidUpdate(): void {\n    if (this.el) {\n      embed(\n        this.el,\n        this.props.data,\n        this.props.embedMode,\n        this.props.version,\n        this.props.renderedCallback\n      );\n    }\n  }\n\n  render(): ?React$Element<any> {\n    // Note: We hide vega-actions since they won't work in our environment\n    // (this is only needed for vega2, since vega-embed v3 supports hiding\n    // actions via options)\n    return (\n      <React.Fragment>\n        <style>{\".vega-actions{ display: none; }\"}</style>\n        <div\n          ref={el => {\n            this.el = el;\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props<MediaType> = {\n  data: Object,\n  mediaType: MediaType\n};\n\nexport function VegaLite1(props: Props<\"application/vnd.vegalite.v1+json\">) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega2\" />;\n}\nVegaLite1.MIMETYPE = MIMETYPE_VEGALITE1;\nVegaLite1.defaultProps = {\n  mediaType: MIMETYPE_VEGA2\n};\n\nexport function Vega2(props: Props<\"application/vnd.vega.v2+json\">) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega2\" />;\n}\nVega2.MIMETYPE = MIMETYPE_VEGA2;\nVega2.defaultProps = {\n  mediaType: MIMETYPE_VEGA2\n};\n\n// For backwards compatibility\nexport { VegaLite1 as VegaLite, Vega2 as Vega };\n\nexport function VegaLite2(props: Props<\"application/vnd.vegalite.v2+json\">) {\n  return <VegaEmbed data={props.data} embedMode=\"vega-lite\" version=\"vega3\" />;\n}\nVegaLite2.MIMETYPE = MIMETYPE_VEGALITE2;\nVegaLite2.defaultProps = {\n  mediaType: MIMETYPE_VEGALITE2\n};\n\nexport function Vega3(props: Props<\"application/vnd.vega.v3+json\">) {\n  return <VegaEmbed data={props.data} embedMode=\"vega\" version=\"vega3\" />;\n}\nVega3.MIMETYPE = MIMETYPE_VEGA3;\nVega3.defaultProps = {\n  mediaType: MIMETYPE_VEGA3\n};\n"],"sourceRoot":""}