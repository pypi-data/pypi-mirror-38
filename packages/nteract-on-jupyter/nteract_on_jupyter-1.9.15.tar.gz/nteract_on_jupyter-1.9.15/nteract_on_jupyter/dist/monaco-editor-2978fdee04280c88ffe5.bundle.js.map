{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/output.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/richest-mime.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/index.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/display.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/monaco-editor/src/index.js"],"names":["__webpack_require__","_transforms","Immutable","Output","React","Component","nextProps","output","this","props","displayOrder","transforms","theme","models","isImmutable","toJS","output_type","bundle","data","metadata","_react2","default","createElement","_richestMime2","text","name","_ansiToReact2","className","traceback","classPrefix","join","ename","evalue","defaultProps","Fallback","_ref","componentStack","error","style","backgroundColor","color","fontWeight","display","padding","marginBottom","toString","RichestMime","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","info","setState","mimetype","richestMimetype","Transform","Display","DEFAULT_SCROLL_HEIGHT","PureComponent","_props","isHidden","outputs","_objectWithoutProperties","maxHeight","expanded","overflowY","map","index","_output2","_extends","key","Map","_lodash","monaco","MonacoEditor","componentWillReceiveProps","debounce","e","onChange","getValue","editor","create","monacoContainer","value","language","mode","minimap","enabled","autoIndent","editorFocused","focus","onDidChangeModelContent","bind","prevProps","setValue","updateOptions","dispose","_this2","ref","container"],"mappings":"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","file":"monaco-editor-2978fdee04280c88ffe5.bundle.js","sourcesContent":["// @flow\nimport React from \"react\";\nimport Ansi from \"ansi-to-react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport RichestMime from \"./richest-mime\";\n\nimport * as Immutable from \"immutable\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  output: any,\n  transforms: Object,\n  theme: string,\n  models: Object\n};\n\nconst classPrefix = \"nteract-display-area-\";\n\nexport default class Output extends React.Component<Props, null> {\n  static defaultProps = {\n    models: {},\n    theme: \"light\",\n    transforms,\n    displayOrder\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      // NOTE: this only does a shallow comparison that mostly only works\n      //       well for Immutable Outputs\n      nextProps.output !== this.props.output ||\n      nextProps.displayOrder !== this.props.displayOrder ||\n      nextProps.transforms !== this.props.transforms ||\n      nextProps.theme !== this.props.theme ||\n      nextProps.models !== this.props.models\n    );\n  }\n\n  render() {\n    let output = this.props.output;\n    let models = this.props.models;\n\n    // TODO: Incorporate the new output record types into both commutable and the react components that use them\n    if (Immutable.isImmutable(output)) {\n      output = output.toJS();\n    }\n    if (Immutable.isImmutable(models)) {\n      models = models.toJS();\n    }\n\n    const outputType = output.output_type;\n\n    switch (outputType) {\n      case \"execute_result\":\n      // We can defer to display data here, the cell number will be handled\n      // separately. For reference, it is output.execution_count\n      // The execution_count belongs in the component above if\n      // this is a code cell\n\n      // falls through\n      case \"display_data\": {\n        const bundle = output.data;\n        const metadata = output.metadata;\n        return (\n          <RichestMime\n            bundle={bundle}\n            metadata={metadata}\n            displayOrder={this.props.displayOrder}\n            transforms={this.props.transforms}\n            theme={this.props.theme}\n            models={models}\n          />\n        );\n      }\n      case \"stream\": {\n        const text = output.text;\n        const name = output.name;\n        switch (name) {\n          case \"stdout\":\n          case \"stderr\":\n            return <Ansi className={classPrefix + name}>{text}</Ansi>;\n          default:\n            return null;\n        }\n      }\n      case \"error\": {\n        const traceback = output.traceback;\n        if (!traceback) {\n          return (\n            <Ansi className={classPrefix + \"traceback\"}>{`${output.ename}: ${\n              output.evalue\n            }`}</Ansi>\n          );\n        }\n        return (\n          <Ansi className={classPrefix + \"traceback\"}>\n            {traceback.join(\"\\n\")}\n          </Ansi>\n        );\n      }\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport React from \"react\";\n\nimport { richestMimetype, transforms, displayOrder } from \"@nteract/transforms\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  transforms: Object,\n  bundle: Object,\n  metadata: Object,\n  theme: string,\n  models?: Object\n};\n\ntype ErrorInfo = {\n  componentStack: string\n};\n\ntype State = {\n  error: ?Error,\n  info: ?ErrorInfo\n};\n\ntype FallbackProps = {\n  componentStack: string,\n  error: Error\n};\n\nconst Fallback = ({ componentStack, error }: FallbackProps) => (\n  <div\n    style={{\n      backgroundColor: \"ghostwhite\",\n      color: \"black\",\n      fontWeight: \"600\",\n      display: \"block\",\n      padding: \"10px\",\n      marginBottom: \"20px\"\n    }}\n  >\n    <h3> Error: {error.toString()}</h3>\n    <details>\n      <summary>stack trace</summary>\n      <pre>{componentStack}</pre>\n    </details>\n  </div>\n);\n\nexport default class RichestMime extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      info: null\n    };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.setState({ error, info });\n  }\n\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    theme: \"light\",\n    metadata: {},\n    bundle: {},\n    models: {}\n  };\n\n  render(): ?React$Element<any> | null {\n    if (this.state.error) {\n      return (\n        <Fallback\n          componentStack={this.state.info ? this.state.info.componentStack : \"\"}\n          error={this.state.error}\n        />\n      );\n    }\n\n    const mimetype = richestMimetype(\n      this.props.bundle,\n      this.props.displayOrder,\n      this.props.transforms\n    );\n\n    if (!mimetype) {\n      // If no mimetype is supported, don't return an element\n      return null;\n    }\n\n    const Transform = this.props.transforms[mimetype];\n    const data = this.props.bundle[mimetype];\n    const metadata = this.props.metadata[mimetype];\n    return (\n      <Transform\n        data={data}\n        metadata={metadata}\n        theme={this.props.theme}\n        models={this.props.models}\n      />\n    );\n  }\n}\n","// @flow\nimport Display from \"./display\";\nimport RichestMime from \"./richest-mime\";\nimport Output from \"./output\";\n\nexport { Display, RichestMime, Output };\n","// @flow\nimport React from \"react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport * as Immutable from \"immutable\";\n\nimport Output from \"./output\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  outputs: Array<any>,\n  transforms: Object,\n  theme: string,\n  expanded: boolean,\n  isHidden: boolean,\n  models: Object\n};\n\nexport const DEFAULT_SCROLL_HEIGHT = 600;\n\nexport default class Display extends React.PureComponent<Props> {\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    isHidden: false,\n    expanded: false,\n    theme: \"light\",\n    models: Immutable.Map()\n  };\n\n  render() {\n    const { isHidden, outputs, ...props } = this.props;\n\n    if (!isHidden) {\n      return (\n        <div\n          className=\"cell_display\"\n          style={{\n            maxHeight: props.expanded ? \"100%\" : `${DEFAULT_SCROLL_HEIGHT}px`,\n            overflowY: \"auto\"\n          }}\n        >\n          {outputs\n            ? outputs.map((output, index) => (\n                <Output key={index} output={output} {...props} />\n              ))\n            : null}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","// @flow\n/* eslint-disable class-methods-use-this */\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { of } from \"rxjs/observable/of\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport type { Subscription } from \"rxjs/Subscription\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { Map as ImmutableMap } from \"immutable\";\n\nimport { RichestMime } from \"@nteract/display-area\";\n\nimport { debounce, merge } from \"lodash\";\n\nimport * as monaco from \"monaco-editor\";\n\nfunction normalizeLineEndings(str) {\n  if (!str) return str;\n  return str.replace(/\\r\\n|\\r/g, \"\\n\");\n}\n\nexport type MonacoEditorProps = {\n  theme: string,\n  mode: ?string,\n  onChange: (value: string) => void,\n  value: string,\n  editorFocused: boolean\n};\n\nclass MonacoEditor extends React.Component<MonacoEditorProps> {\n  monaco: ?monaco.IStandaloneCodeEditor;\n  monacoContainer: ?HTMLElement;\n\n  static defaultProps = {\n    onChange: (value: string) => {},\n    editorFocused: false,\n    mode: \"text/plain\"\n  };\n\n  constructor(props: MonacoEditorProps): void {\n    super(props);\n  }\n\n  componentWillMount() {\n    (this: any).componentWillReceiveProps = debounce(\n      this.componentWillReceiveProps,\n      0\n    );\n  }\n\n  onDidChangeModelContent(e: any): void {\n    if (this.monaco && this.props.onChange) {\n      this.props.onChange(this.monaco.getValue());\n    }\n  }\n\n  componentDidMount(): void {\n    this.monaco = monaco.editor.create(this.monacoContainer, {\n      value: this.props.value,\n      language: this.props.mode,\n      theme: this.props.theme,\n      minimap: {\n        enabled: false\n      },\n      autoIndent: true\n    });\n\n    if (this.props.editorFocused) {\n      this.monaco.focus();\n    }\n\n    this.monaco.onDidChangeModelContent(\n      this.onDidChangeModelContent.bind(this)\n    );\n  }\n\n  componentDidUpdate(prevProps: MonacoEditorProps): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    if (this.monaco.getValue() !== this.props.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      // $FlowFixMe: We should be detecting monaco above\n      this.monaco.setValue(this.props.value);\n    }\n\n    // $FlowFixMe: We should be detecting monaco above\n    this.monaco.updateOptions({\n      language: this.props.mode,\n      theme: this.props.theme\n    });\n  }\n\n  componentWillReceiveProps(nextProps: MonacoEditorProps) {\n    if (this.monaco && this.monaco.getValue() !== nextProps.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      this.monaco.setValue(nextProps.value);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.monaco) {\n      this.monaco.dispose();\n    }\n  }\n\n  render(): React$Element<any> {\n    return (\n      <div\n        className=\"monaco cm-s-composition\"\n        ref={container => {\n          this.monacoContainer = container;\n        }}\n      />\n    );\n  }\n}\n\nexport default MonacoEditor;\n"],"sourceRoot":""}