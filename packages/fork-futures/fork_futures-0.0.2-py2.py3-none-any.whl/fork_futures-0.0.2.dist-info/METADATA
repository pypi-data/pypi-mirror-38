Metadata-Version: 2.1
Name: fork-futures
Version: 0.0.2
Summary: Provides an alternative to concurrent.futures.ProcessPoolExecutor implemented using fork.
Home-page: https://github.com/tyilo/fork-futures
Author: Asger Hautop Drewsen
Author-email: asgerdrewsen@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.2.0
Description-Content-Type: text/markdown


fork-futures
============

Provides an alternative to [`concurrent.futures.ProcessPoolExecutor`][ProcessPoolExecutor] implemented
using fork.

This means that you can execute local functions in another process, without having to use [`dill`][dill] (and having to dill local variables). The arguments to the function executed are not pickled, only the return values.

`ForkPoolExecutor` can be used as a replacement for [`ProcessPoolExecutor`][ProcessPoolExecutor] and `ForkFuture` as a replacement for [`Future`][Future].

Not all of the [`Executor`][Executor] or [`Future`][Future] API has been implemented.


[ProcessPoolExecutor]: https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor
[Executor]: https://docs.python.org/3/library/concurrent.futures.html#executor-objects
[Future]: https://docs.python.org/3/library/concurrent.futures.html#future-objects
[dill]: https://pypi.org/project/dill/


