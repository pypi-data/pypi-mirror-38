{"version":3,"sources":["edit_media.js"],"names":["$","onDropzoneSuccess","$section","file","xhr","JSON","parse","responseText","section","attr","panelCount","length","$source","$html","html","replace","targetId","indexOf","$contents","url","append","name","find","val","id","insertBefore","addMediaPanel","on","e","preventDefault","confirm","gettext","this","parents","fadeOut","next","prop","document","$panel","_prefix$split","data","split","current","_slicedToArray","$imagePanels","removeClass","addClass","replaceWith","class","href","text","each","i","field","targetPath","maxFiles","queueComplete","forEach","zoneData","fieldId","mediaUrl","window","ShuupAdminConfig","browserUrls","media","activateDropzone","onSuccess","onQueueComplete","dropzone","kind","location","pathname","productId","product_id","$fileInputs","fileIds","fileId","parseInt","isNaN","push","ajax","method","csrfmiddlewaretoken","csrf","file_ids","traditional","success","Messages","enqueue","tags","message","error","alert","onDropzoneQueueComplete"],"mappings":"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","file":"product.js","sourcesContent":["/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2018, Shuup Inc. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n$(function() {\n    $(\".product-media-delete\").on(\"click\", function(e) {\n        e.preventDefault();\n        if (confirm(gettext(\"Are you sure you want to delete this media?\")))\n        {\n            $(this).parents(\".panel\").fadeOut();\n            $(this).next(\".hide\").find(\"input\").prop(\"checked\", true);\n        }\n    });\n\n    $(document).on(\"click\", \".set-as-primary\", function(e) {\n        e.preventDefault();\n        const $panel = $(this).parents(\".panel\");\n        const prefix = $panel.data(\"prefix\");\n\n        const [, current] = prefix.split(\"-\");\n\n        const $imagePanels = $(\"#product-images-section .panel\");\n\n        $imagePanels.removeClass(\"panel-selected\").addClass(\"panel-default\");\n\n        $(\".is-primary-image\").replaceWith(function() {\n            return $(\"<a>\", {\"class\": \"set-as-primary\", \"href\": \"#\"}).text(gettext(\"Set as primary image\"));\n        });\n\n        $imagePanels.each(function(i) {\n            $(\"#id_images-\" + i + \"-is_primary\").prop(\"checked\", false);\n        });\n\n        $(this).replaceWith(function() {\n            return $(\"<span>\", {\"class\": \"is-primary-image\"}).text(gettext(\"Primary image\"));\n        });\n\n        $panel.addClass(\"panel-selected\");\n        $(\"#id_images-\" + current + \"-is_primary\").prop(\"checked\", true);\n    });\n\n    function addMediaPanel($section, file) {\n        const section = $section.attr(\"id\");\n        const panelCount = $(\"#\" + section + \" .panel\").length;\n        const $source = $(\"#\" + section + \"-placeholder-panel\");\n        const $html = $($source.html().replace(/__prefix__/g, panelCount - 1).replace(/__prefix_name__/g, panelCount));\n        let targetId = \"id_images\";\n        if(section.indexOf(\"media\") > 0) {\n            targetId = \"id_media\";\n        }\n        if(file) {\n            let $contents = $(\"<a href='\" + file.url + \"' target='_blank'></a>\");\n            if(targetId === \"id_images\") {\n                $contents.append(\"<img src='\" + file.url + \"'>\");\n                $html.find(\".thumbnail\").append($contents);\n            } else {\n                $contents.append(\"<br><p>\" + file.name + \"</p>\");\n                $html.find(\".thumbnail\").append($contents);\n            }\n            $html.find(\".file-control\").find(\"input\").val(file.id);\n        }\n        $html.insertBefore($source);\n    }\n\n    function onDropzoneQueueComplete(dropzone, kind) {\n        if(location.pathname.indexOf(\"new\") > 0) {\n            // save product media the traditional way via the save button when creating a new product\n            return;\n        }\n        const productId = $(\"#product-\" + kind + \"-section-dropzone\").data().product_id;\n        const $fileInputs = $(\"#product-\" + kind + \"-section\").find(\".file-control input\");\n        var fileIds = [];\n\n        for(var i = 0; i < $fileInputs.length; i++){\n            let fileId = parseInt($($fileInputs[i]).val());\n            if(!isNaN(fileId)) {\n                fileIds.push(parseInt($($fileInputs[i]).val()));\n            }\n        }\n\n        $.ajax({\n            url: \"/sa/products/\" + productId + \"/media/add/\",\n            method: \"POST\",\n            data: {\n                csrfmiddlewaretoken: ShuupAdminConfig.csrf,\n                product_id: productId,\n                file_ids: fileIds,\n                kind\n            },\n            traditional: true,\n            success: function(data) {\n                window.Messages.enqueue({tags: \"success\", text: data.message});\n            },\n            error: function(data) {\n                alert(\"ERROR\");\n            }\n        });\n    }\n\n    function onDropzoneSuccess($section, file) {\n        // file selected through dnd\n        if(file.xhr) {\n            file = JSON.parse(file.xhr.responseText).file;\n        }\n        addMediaPanel($section, file);\n    }\n    const dropzones = [\n        {\n            field: 'product-images-section',\n            targetPath: \"/products/images\",\n            maxFiles: 10,\n            queueComplete: \"images\"\n        },\n        {\n            field: 'product-media-section',\n            targetPath: \"/products/media\",\n            maxFiles: 10,\n            queueComplete: \"media\"\n        }\n    ];\n    dropzones.forEach(function(zoneData) {\n        var fieldId = \"#\" + zoneData.field + \"-dropzone\";\n        if ($(fieldId).length) {\n            const mediaUrl = window.ShuupAdminConfig.browserUrls.media;\n            activateDropzone($(fieldId), {\n                url: mediaUrl + \"?action=upload&path=\" + zoneData.targetPath,\n                maxFiles: zoneData.maxFiles,\n                onSuccess: function(file) {\n                    onDropzoneSuccess($(\"#\" + zoneData.field), file);\n                },\n                onQueueComplete: function() {\n                    onDropzoneQueueComplete(this, zoneData.queueComplete);\n                }\n            });\n        }\n    });\n});\n"]}