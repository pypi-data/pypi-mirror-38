{"version":3,"sources":["../base/js/dropzone.js","edit_media.js"],"names":["activateDropzone","$dropzone","attrs","length","selector","attr","uploadPath","$","data","upload_path","addRemoveLinks","add_remove_links","mediaUrl","window","ShuupAdminConfig","browserUrls","media","params","extend","csrf","gettext","file","done","kind","type","indexOf","dropzone","Dropzone","on","onAddedFile","maxFiles","files","removeFile","onSuccess","find","val","xhr","JSON","parse","responseText","id","onQueueComplete","noop","e","BrowseAPI","openBrowseWindow","obj","name","text","remove","emit","thumbnail","url","push","error","activateDropzones","each","idx","object","includes","module","exports","onDropzoneSuccess","$section","addMediaPanel","section","panelCount","$source","$html","html","replace","targetId","$contents","$name","append","prepend","insertBefore","preventDefault","confirm","parents","fadeOut","next","prop","document","$panel","prefix","split","current","$imagePanels","removeClass","addClass","replaceWith","i","forEach","zoneData","fieldId","field","targetPath","onDropzoneQueueComplete","location","pathname","productId","product_id","$fileInputs","fileIds","fileId","parseInt","isNaN","ajax","Messages","enqueue","tags","message","queueComplete"],"mappings":";AAQA,SAASA,EAAiBC,GAAWC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACpC,GAACD,EAAUE,OAAX,CAKGC,IAAAA,EAAW,IAAMH,EAAUI,KAAK,MAChCC,EAAaC,EAAEH,GAAUI,OAAOC,YAChCC,EAAiBH,EAAEH,GAAUI,OAAOG,iBACpCC,EAAWC,OAAOC,iBAAiBC,YAAYC,MAC/CC,EAASV,EAAEW,QAAO,EAAM,CACrBN,IAAAA,EAAW,uBAAyBN,EACjC,OAAA,CACiBO,oBAAAA,OAAOC,iBAAiBK,MAEhCT,eAAkB,QAAlBA,EACDU,eAAAA,QAAQ,SACN,kBAAA,EACF,gBAAA,EACC,gBAAA,EACP,SAAA,EACUA,mBAAAA,QAAQ,uCACjB,WAAA,EACH,OAAA,SAASC,EAAMC,GACa,WAA5Bf,EAAEH,GAAUI,OAAOe,MAAqBF,EAAKG,KAAKC,QAAQ,SAAW,EAChEL,EAAAA,QAAQ,iCAEbE,MAGTpB,GACGwB,EAAW,IAAIC,SAASvB,EAAUa,GAG/BW,EAAAA,GAAG,YAAa1B,EAAM2B,aAAe,SAASR,GAC5B,IAApBJ,EAAOa,UAAkBJ,EAASK,MAAM5B,OAAS,GACvC6B,EAAAA,WAAWN,EAASK,MAAM,MAIlCH,EAAAA,GAAG,cAAe1B,EAAM+B,WAAa,SAASzB,GACjDJ,EAAAA,GAAU8B,KAAK,SAASC,IAAI,MAGzBP,EAAAA,GAAG,UAAW1B,EAAM+B,WAAa,SAASzB,GAE5CA,EAAK4B,MACGC,EAAAA,KAAKC,MAAM9B,EAAK4B,IAAIG,cAAclB,MAE3CjB,EAAAA,GAAU8B,KAAK,SAASC,IAAI3B,EAAKgC,MAG9BZ,EAAAA,GAAG,gBAAiB1B,EAAMuC,iBAAmBlC,EAAEmC,MAEtDtC,EAAAA,GAAUwB,GAAG,QAAS,SAASe,GACtBC,OAAAA,UAAUC,iBAAiB,CACxB,KAAA,QACS,cAAA,CAAC,SAAU,UAClBtC,OAAAA,EAAEH,GAAUI,OAAOe,KACjB,SAAA,SAACuB,GACHC,EAAAA,KAAOD,EAAIE,KACb5C,EAAAA,GAAU8B,KAAK,SAASC,IAAIW,EAAIN,IAChCpC,EAAAA,GAAU8B,KAAK,eAAee,SACvBC,EAAAA,KAAK,YAAaJ,GACxBA,EAAIK,WACMD,EAAAA,KAAK,YAAaJ,EAAKA,EAAIK,WAE/BD,EAAAA,KAAK,UAAWJ,GAChBI,EAAAA,KAAK,WAAYJ,QAKhCtC,IAAAA,EAAOD,EAAEH,GAAUI,OACtBA,EAAK4C,MACKrB,EAAAA,MAAMsB,KAAK7C,GACX0C,EAAAA,KAAK,YAAa1C,GACxBA,EAAK2C,WACKD,EAAAA,KAAK,YAAa1C,EAAMA,EAAK2C,WAEjCD,EAAAA,KAAK,WAAY1C,SA9ElB8C,QAAAA,MAAM,kDAAmDrD,GAkFzEY,OAAO0C,kBAAoB,WACrB,EAAA,6BAA6BC,KAAK,SAASC,EAAKC,GACxChC,IAAAA,EAAWnB,EAAEmD,GACfhC,EAASrB,KAAK,MAAMsD,SAAS,eAAyD,IAAxCjC,EAASQ,KAAK,eAAe/B,QAC1DuB,EAAAA,MAK7BnB,EAAE,WACSgD,OAAAA,sBAGXK,OAAOC,QAAU,CAAE7D,iBAAF;;AC9FjB,aAXA,IAAA,EAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GASA,EAAA,QAAA,uBAEAO,EAAE,WAgGWuD,SAAAA,EAAkBC,EAAU1C,GAE9BA,EAAKe,MACGC,EAAAA,KAAKC,MAAMjB,EAAKe,IAAIG,cAAclB,MA9DxC2C,SAAcD,EAAU1C,GACvB4C,IAAAA,EAAUF,EAAS1D,KAAK,MACxB6D,EAAa3D,EAAE,IAAM0D,EAAU,WAAW9D,OAC1CgE,EAAU5D,EAAE,IAAM0D,EAAU,sBAC5BG,EAAQ7D,EAAE4D,EAAQE,OAAOC,QAAQ,cAAeJ,EAAa,GAAGI,QAAQ,mBAAoBJ,IAC9FK,EAAW,YAIXlD,GAHA4C,EAAQxC,QAAQ,SAAW,IAChB,EAAA,YAEXJ,EAAM,CACFmD,IAAAA,EAAYjE,EAAE,oCAAsCc,EAAK+B,IAAM,0BAC/DqB,EAAQ,OAASpD,EAAK0B,KAAO,QACjB,cAAbwB,GACWG,EAAAA,OAAO,aAAerD,EAAK+B,IAAM,MACrClB,EAAAA,KAAK,cAAcwC,OAAOF,KAEtBE,EAAAA,OAAO,aAAerD,EAAK+B,IAAM,QACrClB,EAAAA,KAAK,iBAAiByC,QAAQF,IAElCvC,EAAAA,KAAK,iBAAiBA,KAAK,SAASC,IAAId,EAAKmB,IAEjDoC,EAAAA,aAAaT,GA2CLJ,CAAAA,EAAU1C,GApG1B,EAAA,yBAAyBO,GAAG,QAAS,SAASe,GAC1CkC,EAAAA,iBACEC,QAAQ1D,QAAQ,kDAEd,EAAA,MAAM2D,QAAQ,UAAUC,UACxB,EAAA,MAAMC,KAAK,WAAW/C,KAAK,SAASgD,KAAK,WAAW,MAI5DC,EAAAA,UAAUvD,GAAG,QAAS,kBAAmB,SAASe,GAC9CkC,EAAAA,iBACIO,IAAAA,EAAS7E,EAAE,MAAMwE,QAAQ,UAGXM,EAFLD,EAAO5E,KAAK,UAEA8E,MAAM,KAAxBC,EAL0C,EAAA,EAAA,GAAA,GAO7CC,EAAejF,EAAE,kCAEVkF,EAAAA,YAAY,kBAAkBC,SAAS,iBAElD,EAAA,qBAAqBC,YAAY,WACxBpF,OAAAA,EAAE,MAAO,CAAC,MAAS,wCAAyC,KAAQ,MAAMyC,KAAK5B,QAAQ,2BAGrFoC,EAAAA,KAAK,SAASoC,GACrB,EAAA,cAAgBA,EAAI,eAAeV,KAAK,WAAW,KAGvD,EAAA,MAAMS,YAAY,WACTpF,OAAAA,EAAE,SAAU,CAAC,MAAS,qBAAqByC,KAAK5B,QAAQ,oBAG5DsE,EAAAA,SAAS,kBACd,EAAA,cAAgBH,EAAU,eAAeL,KAAK,WAAW,KAqE7C,CACd,CACW,MAAA,yBACK,WAAA,mBACF,SAAA,GACK,cAAA,UAEnB,CACW,MAAA,wBACK,WAAA,kBACF,SAAA,GACK,cAAA,UAGbW,QAAQ,SAASC,GACnBC,IAAAA,EAAU,IAAMD,EAASE,MAAQ,YACjCzF,GAAAA,EAAEwF,GAAS5F,OAAQ,CACbS,IAAAA,EAAWC,OAAOC,iBAAiBC,YAAYC,OACpCT,EAAAA,EAAAA,kBAAAA,EAAEwF,GAAU,CACpBnF,IAAAA,EAAW,uBAAyBkF,EAASG,WACxCH,SAAAA,EAAShE,SACR,UAAA,SAAST,GACEd,EAAAA,EAAE,IAAMuF,EAASE,OAAQ3E,IAE9B,gBAAA,YAlEpB6E,SAAwBxE,EAAUH,GACpC4E,KAAAA,SAASC,SAAS3E,QAAQ,OAAS,GAAnC0E,CAQC,IAJEE,IAAAA,EAAY9F,EAAE,YAAcgB,EAAO,qBAAqBf,OAAO8F,WAC/DC,EAAchG,EAAE,YAAcgB,EAAO,YAAYW,KAAK,uBACxDsE,EAAU,GAENZ,EAAI,EAAGA,EAAIW,EAAYpG,OAAQyF,IAAI,CACnCa,IAAAA,EAASC,SAASnG,EAAEgG,EAAYX,IAAIzD,OACpCwE,MAAMF,IACEpD,EAAAA,KAAKqD,SAASnG,EAAEgG,EAAYX,IAAIzD,QAI9CyE,EAAAA,KAAK,CACE,IAAA,gBAAkBP,EAAY,cAC3B,OAAA,OACF,KAAA,CACmBvF,oBAAAA,iBAAiBK,KAC1BkF,WAAAA,EACFG,SAAAA,EACVjF,KAAAA,GAES,aAAA,EACJ,QAAA,SAASf,GACPqG,OAAAA,SAASC,QAAQ,CAACC,KAAM,UAAW/D,KAAMxC,EAAKwG,WAElD,MAAA,SAASxG,GACN,MAAA,aAqCsB,CAAA,EAAMsF,EAASmB","file":"product.map","sourceRoot":"../../../static_src/product","sourcesContent":["/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2018, Shuup Inc. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction activateDropzone($dropzone, attrs={}) {\n    if(!$dropzone.length) {\n        console.error(\"[dropzone.js] Unable to find requested element \", $dropzone);\n        return;\n    }\n\n    const selector = \"#\" + $dropzone.attr(\"id\");\n    const uploadPath = $(selector).data().upload_path;\n    const addRemoveLinks = $(selector).data().add_remove_links;\n    const mediaUrl = window.ShuupAdminConfig.browserUrls.media;\n    const params = $.extend(true, {\n        url: mediaUrl + \"?action=upload&path=\" + uploadPath,\n        params: {\n            csrfmiddlewaretoken: window.ShuupAdminConfig.csrf\n        },\n        addRemoveLinks: (addRemoveLinks == \"True\"),\n        dictRemoveFile: gettext(\"Clear\"),\n        autoProcessQueue: true,\n        uploadMultiple: false,\n        parallelUploads: 1,\n        maxFiles: 1,\n        dictDefaultMessage: gettext(\"Drop files here or click to browse.\"),\n        clickable: false,\n        accept: function(file, done) {\n            if ($(selector).data().kind === \"images\" && file.type.indexOf(\"image\") < 0) {\n                done(gettext(\"only images can be uploaded!\"));\n            } else {\n                done();\n            }\n        }\n    }, attrs);\n    const dropzone = new Dropzone(selector, params);\n\n\n    dropzone.on(\"addedfile\", attrs.onAddedFile || function(file) {\n        if(params.maxFiles === 1 && dropzone.files.length > 1) {\n            dropzone.removeFile(dropzone.files[0]);\n        }\n    });\n\n    dropzone.on(\"removedfile\", attrs.onSuccess || function(data){\n        $(selector).find(\"input\").val(\"\");\n    });\n\n    dropzone.on(\"success\", attrs.onSuccess || function(data){\n        // file selected through dnd\n        if(data.xhr) {\n            data = JSON.parse(data.xhr.responseText).file;\n        }\n        $(selector).find(\"input\").val(data.id);\n    });\n\n    dropzone.on(\"queuecomplete\", attrs.onQueueComplete || $.noop);\n\n    $(selector).on(\"click\", function(e) {\n        window.BrowseAPI.openBrowseWindow({\n            kind: \"media\",\n            disabledMenus: [\"delete\", \"rename\"],\n            filter: $(selector).data().kind,\n            onSelect: (obj) => {\n                obj.name = obj.text;\n                $(selector).find(\"input\").val(obj.id);\n                $(selector).find(\".dz-preview\").remove();\n                dropzone.emit(\"addedfile\", obj);\n                if(obj.thumbnail) {\n                    dropzone.emit(\"thumbnail\", obj, obj.thumbnail);\n                }\n                dropzone.emit(\"success\", obj);\n                dropzone.emit(\"complete\", obj);\n            }\n        });\n    });\n\n    const data = $(selector).data();\n    if(data.url) {\n        dropzone.files.push(data);\n        dropzone.emit(\"addedfile\", data);\n        if(data.thumbnail){\n            dropzone.emit(\"thumbnail\", data, data.thumbnail);\n        }\n        dropzone.emit(\"complete\", data);\n    }\n}\n\nwindow.activateDropzones = function() {\n    $(\"div[data-dropzone='true']\").each(function(idx, object) {\n        const dropzone = $(object);\n        if(!dropzone.attr(\"id\").includes(\"__prefix__\") && dropzone.find(\".dz-message\").length === 0) {\n            activateDropzone(dropzone);\n        }\n    });\n};\n\n$(function(){\n    window.activateDropzones();\n});\n\nmodule.exports = { activateDropzone }\n","/**\n * This file is part of Shuup.\n *\n * Copyright (c) 2012-2018, Shuup Inc. All rights reserved.\n *\n * This source code is licensed under the OSL-3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { activateDropzone } from '../base/js/dropzone';\n\n$(function() {\n    $(\".product-media-delete\").on(\"click\", function(e) {\n        e.preventDefault();\n        if (confirm(gettext(\"Are you sure you want to delete this media?\")))\n        {\n            $(this).parents(\".panel\").fadeOut();\n            $(this).next(\".d-none\").find(\"input\").prop(\"checked\", true);\n        }\n    });\n\n    $(document).on(\"click\", \".set-as-primary\", function(e) {\n        e.preventDefault();\n        const $panel = $(this).parents(\".panel\");\n        const prefix = $panel.data(\"prefix\");\n\n        const [, current] = prefix.split(\"-\");\n\n        const $imagePanels = $(\"#product-images-section .panel\");\n\n        $imagePanels.removeClass(\"panel-selected\").addClass(\"panel-default\");\n\n        $(\".is-primary-image\").replaceWith(function() {\n            return $(\"<a>\", {\"class\": \"set-as-primary btn btn-sm btn-inverse\", \"href\": \"#\"}).text(gettext(\"Set as primary image\"));\n        });\n\n        $imagePanels.each(function(i) {\n            $(\"#id_images-\" + i + \"-is_primary\").prop(\"checked\", false);\n        });\n\n        $(this).replaceWith(function() {\n            return $(\"<span>\", {\"class\": \"is-primary-image\"}).text(gettext(\"Primary image\"));\n        });\n\n        $panel.addClass(\"panel-selected\");\n        $(\"#id_images-\" + current + \"-is_primary\").prop(\"checked\", true);\n    });\n\n    function addMediaPanel($section, file) {\n        const section = $section.attr(\"id\");\n        const panelCount = $(\"#\" + section + \" .panel\").length;\n        const $source = $(\"#\" + section + \"-placeholder-panel\");\n        const $html = $($source.html().replace(/__prefix__/g, panelCount - 1).replace(/__prefix_name__/g, panelCount));\n        let targetId = \"id_images\";\n        if (section.indexOf(\"media\") > 0) {\n            targetId = \"id_media\";\n        }\n        if (file) {\n            let $contents = $(\"<a class='thumbnail-image' href='\" + file.url + \"' target='_blank'></a>\");\n            let $name = \"<h4>\" + file.name + \"</h4>\";\n            if(targetId === \"id_images\") {\n                $contents.append(\"<img src='\" + file.url + \"'>\");\n                $html.find(\".thumbnail\").append($contents);\n            } else {\n                $contents.append(\"<img src='\" + file.url + \"' />\");\n                $html.find(\".extra-fields\").prepend($name);\n            }\n            $html.find(\".file-control\").find(\"input\").val(file.id);\n        }\n        $html.insertBefore($source);\n    }\n\n    function onDropzoneQueueComplete(dropzone, kind) {\n        if(location.pathname.indexOf(\"new\") > 0) {\n            // save product media the traditional way via the save button when creating a new product\n            return;\n        }\n        const productId = $(\"#product-\" + kind + \"-section-dropzone\").data().product_id;\n        const $fileInputs = $(\"#product-\" + kind + \"-section\").find(\".file-control input\");\n        var fileIds = [];\n\n        for(var i = 0; i < $fileInputs.length; i++){\n            let fileId = parseInt($($fileInputs[i]).val());\n            if(!isNaN(fileId)) {\n                fileIds.push(parseInt($($fileInputs[i]).val()));\n            }\n        }\n\n        $.ajax({\n            url: \"/sa/products/\" + productId + \"/media/add/\",\n            method: \"POST\",\n            data: {\n                csrfmiddlewaretoken: ShuupAdminConfig.csrf,\n                product_id: productId,\n                file_ids: fileIds,\n                kind\n            },\n            traditional: true,\n            success: function(data) {\n                window.Messages.enqueue({tags: \"success\", text: data.message});\n            },\n            error: function(data) {\n                alert(\"ERROR\");\n            }\n        });\n    }\n\n    function onDropzoneSuccess($section, file) {\n        // file selected through dnd\n        if(file.xhr) {\n            file = JSON.parse(file.xhr.responseText).file;\n        }\n        addMediaPanel($section, file);\n    }\n    const dropzones = [\n        {\n            field: 'product-images-section',\n            targetPath: \"/products/images\",\n            maxFiles: 10,\n            queueComplete: \"images\"\n        },\n        {\n            field: 'product-media-section',\n            targetPath: \"/products/media\",\n            maxFiles: 10,\n            queueComplete: \"media\"\n        }\n    ];\n    dropzones.forEach(function(zoneData) {\n        var fieldId = \"#\" + zoneData.field + \"-dropzone\";\n        if ($(fieldId).length) {\n            const mediaUrl = window.ShuupAdminConfig.browserUrls.media;\n            activateDropzone($(fieldId), {\n                url: mediaUrl + \"?action=upload&path=\" + zoneData.targetPath,\n                maxFiles: zoneData.maxFiles,\n                onSuccess: function(file) {\n                    onDropzoneSuccess($(\"#\" + zoneData.field), file);\n                },\n                onQueueComplete: function() {\n                    onDropzoneQueueComplete(this, zoneData.queueComplete);\n                }\n            });\n        }\n    });\n});\n"]}