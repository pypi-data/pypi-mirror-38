# Generated by Django 2.1.1 on 2018-10-25 08:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chromosome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5, unique=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feat_type', models.CharField(max_length=45)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
            ],
            options={
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('strand', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=3000)),
                ('chromosome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Chromosome')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='GeneAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=50)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Gene')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='GeneLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txstart', models.IntegerField()),
                ('txend', models.IntegerField()),
                ('cdsstart', models.IntegerField()),
                ('cdsend', models.IntegerField()),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Gene')),
            ],
            options={
                'ordering': ['txstart'],
            },
        ),
        migrations.CreateModel(
            name='Genome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organism', models.CharField(max_length=100)),
                ('chromosomes', models.IntegerField()),
                ('assembly', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('strand', models.CharField(max_length=1)),
                ('tss1500start', models.IntegerField()),
                ('tss200start', models.IntegerField()),
                ('txstart', models.IntegerField()),
                ('txend', models.IntegerField()),
                ('cdsstart', models.IntegerField()),
                ('cdsend', models.IntegerField()),
                ('description', models.TextField(max_length=3000)),
                ('long_name', models.TextField(max_length=1000)),
                ('has_coding', models.BooleanField(default=False)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Gene')),
            ],
            options={
                'ordering': ['txstart'],
            },
        ),
        migrations.AddField(
            model_name='feature',
            name='transcript',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Transcript'),
        ),
        migrations.AddField(
            model_name='chromosome',
            name='genome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dgenome.Genome'),
        ),
        migrations.AddIndex(
            model_name='transcript',
            index=models.Index(fields=['name'], name='dgenome_tra_name_e75b7a_idx'),
        ),
        migrations.AlterIndexTogether(
            name='transcript',
            index_together={('name', 'txstart', 'txend', 'gene')},
        ),
        migrations.AlterUniqueTogether(
            name='genelocation',
            unique_together={('txstart', 'txend', 'gene')},
        ),
        migrations.AlterIndexTogether(
            name='genelocation',
            index_together={('txstart', 'txend')},
        ),
        migrations.AddIndex(
            model_name='genealias',
            index=models.Index(fields=['alias'], name='dgenome_gen_alias_474486_idx'),
        ),
        migrations.AddIndex(
            model_name='gene',
            index=models.Index(fields=['name'], name='dgenome_gen_name_101dbd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gene',
            unique_together={('name', 'chromosome')},
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['feat_type'], name='dgenome_fea_feat_ty_05228d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feature',
            unique_together={('start', 'end', 'transcript')},
        ),
        migrations.AlterIndexTogether(
            name='feature',
            index_together={('start', 'end')},
        ),
        migrations.AddIndex(
            model_name='chromosome',
            index=models.Index(fields=['name'], name='dgenome_chr_name_126071_idx'),
        ),
    ]
