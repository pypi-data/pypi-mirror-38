# Generated by Django 2.1.3 on 2018-11-09 17:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField(max_length=255)),
                ('value', models.TextField(blank=True, null=True)),
                ('kind', models.CharField(choices=[('array', 'array'), ('boolean', 'boolean'), ('media', 'media'), ('null', 'null'), ('number', 'number'), ('object', 'object'), ('string', 'string')], max_length=7)),
                ('mime_type', models.CharField(blank=True, max_length=30, null=True)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='factory_server.Bundle')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='factory_server.Item')),
            ],
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('kind', models.CharField(choices=[('debug', 'debug'), ('info', 'info'), ('warning', 'warning'), ('success', 'success'), ('error', 'error')], db_index=True, max_length=7)),
                ('text', models.TextField(blank=True, null=True)),
                ('extra', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(unique=True)),
                ('key', models.CharField(db_index=True, max_length=64)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factory_machines', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('confirm', 'confirm'), ('success', 'success'), ('error', 'error')], db_index=True, max_length=7)),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('namespace', models.SlugField()),
                ('function', models.SlugField()),
                ('verbose_name', models.CharField(max_length=101)),
                ('scheduling', models.CharField(choices=[('auto', 'auto'), ('manual', 'manual')], default='auto', max_length=7)),
                ('can_fail', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('scheduling', 'scheduling'), ('scheduled', 'scheduled'), ('running', 'running'), ('failed', 'failed'), ('cancelled', 'cancelled'), ('successful', 'successful')], default='pending', max_length=10)),
                ('progress', models.FloatField(blank=True, default=None, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('ordering',),
            },
        ),
        migrations.CreateModel(
            name='OperationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('response', models.BooleanField(null=True)),
                ('responded', models.DateTimeField(blank=True, null=True)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='factory_server.Operation')),
            ],
        ),
        migrations.CreateModel(
            name='OperationResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('scheduling', 'scheduling'), ('scheduled', 'scheduled'), ('running', 'running'), ('failed', 'failed'), ('cancelled', 'cancelled'), ('successful', 'successful')], default='pending', max_length=10)),
                ('data', models.TextField(blank=True, null=True)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='factory_server.Operation')),
            ],
        ),
        migrations.CreateModel(
            name='OperationResultTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='factory_server.OperationResult')),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.SlugField()),
                ('function', models.SlugField(blank=True, null=True)),
                ('url', models.URLField(max_length=255, verbose_name='URL')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operators', to='factory_server.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('auto', 'auto'), ('manual', 'manual')], default='pending', max_length=10)),
                ('progress', models.PositiveIntegerField(default=0)),
                ('meta', models.TextField()),
                ('input_bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_processes', to='factory_server.Bundle')),
                ('output_bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_processes', to='factory_server.Bundle')),
            ],
            options={
                'verbose_name_plural': 'processes',
            },
        ),
        migrations.CreateModel(
            name='ProcessTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='factory_server.Process')),
            ],
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('tag', 'tag')], db_index=True, max_length=3)),
                ('value', models.CharField(db_index=True, max_length=255)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restrictions', to='factory_server.Operation')),
            ],
        ),
        migrations.AddField(
            model_name='operationresult',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='factory_server.Operator'),
        ),
        migrations.AddField(
            model_name='operationrequest',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='factory_server.Operator'),
        ),
        migrations.AddField(
            model_name='operation',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='factory_server.Process'),
        ),
        migrations.AddField(
            model_name='message',
            name='operation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='factory_server.Operation'),
        ),
        migrations.AddField(
            model_name='logentry',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log', to='factory_server.Process'),
        ),
        migrations.AlterUniqueTogether(
            name='restriction',
            unique_together={('value', 'kind')},
        ),
        migrations.AlterUniqueTogether(
            name='processtag',
            unique_together={('name', 'process')},
        ),
        migrations.AlterUniqueTogether(
            name='operator',
            unique_together={('function', 'namespace', 'machine')},
        ),
        migrations.AlterUniqueTogether(
            name='operationresulttag',
            unique_together={('name', 'result')},
        ),
        migrations.AlterUniqueTogether(
            name='operationresult',
            unique_together={('operator', 'operation')},
        ),
        migrations.AlterUniqueTogether(
            name='message',
            unique_together={('kind', 'operation')},
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('key', 'bundle')},
        ),
    ]
