Metadata-Version: 1.1
Name: mxsniff
Version: 0.3.5
Summary: MX Sniffer
Home-page: https://github.com/jace/mxsniff
Author: Kiran Jonnalagadda
Author-email: jace@pobox.com
License: UNKNOWN
Description: MX Sniff
        ========
        
        |travis| |coveralls|
        
        MX Sniff identifies well known email service providers given
        an email address or a domain name. Use this to find out how many
        users in your email database are Gmail users (via Google Apps).
        
        To install, get it from PyPI::
        
            $ pip install mxsniff
        
        Or get the development branch direct from GitHub::
        
            $ pip install https://github.com/jace/mxsniff/archive/master.zip
        
        Command line usage::
        
            $ mxsniff example.com gmail.com example@gmail.com https://www.google.com
            $ mxsniff -v example.com
            $ mxsniff @filename_with_list_of_domains_or_emails_or_urls
            $ mxsniff example@gmail.com -p your_email@example.com
        
        Python usage::
        
            >>> from mxsniff import mxsniff, mxbulksniff
            >>> mxsniff('google.com')
            >>> mxbulksniff(['example.com', 'google.com'])  # Returns a generator with one result at a time
        
        
        .. |travis| image:: https://secure.travis-ci.org/jace/mxsniff.svg
            :target: https://travis-ci.org/jace/mxsniff
            :alt: Build status
        
        .. |coveralls| image:: https://coveralls.io/repos/github/jace/mxsniff/badge.svg?branch=master
            :target: https://coveralls.io/github/jace/mxsniff?branch=master
            :alt: Coverage status
        
        
        0.3.5
        =====
        
        * Fixed wildcard subdomain matching
        * New service provider
        * Updated PyPI classifiers
        
        0.3.4
        =====
        
        * Fixed cache handling
        * Distinguish Yandex public vs hosted email provider
        
        0.3.3
        =====
        
        * ``mxprobe`` now distinguishes between soft and hard fails
        * ``mxsniff`` command line now produces valid CSV or JSON (verbose mode)
        * Verbose output now includes canonical representation of an email address to facilitate comparison
        
        0.3.2
        =====
        
        * Fix PyPI distribution (no code changes)
        
        0.3.1
        =====
        
        * The providers list now includes provider metadata (title, note, url)
        * Public email domains are now tagged and identified in results
        * A static domain list is included for very popular domains (typically public email domains)
        * The command line script now handles IDN names correctly
        * Email probe feature, to attempt a guess on whether the email is actually valid
        
        0.3.0
        =====
        
        * Added support for wildcards in domain names
        * Additional providers
        * Detect self-hosted email servers
        * Remove verbose mode in the mxsniff function; always verbose now
        * Track MX TLDs
        * Run queries in a multiprocess pool in the command line version
        
        0.2.1
        =====
        
        * Updated README and minor bugfixes
        
        0.2.0
        =====
        
        * Python 3 and PyPy support
        * ``mxsniff`` now returns a string or None, switching to a list only when multiple service providers are found
        * ``get_domain`` now extracts the TLD when a URL is provided, so ``www.`` and other subdomains are ignored
        * New ``mxbulksniff`` to run on a large list
        * Verbose mode to also retrieve MX values
        * New console script for easy use and batch processing of large lists
        * More providers
        
        0.1.0
        =====
        
        * First version
        
Keywords: mxsniff,email,mx
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Topic :: Communications :: Email
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
