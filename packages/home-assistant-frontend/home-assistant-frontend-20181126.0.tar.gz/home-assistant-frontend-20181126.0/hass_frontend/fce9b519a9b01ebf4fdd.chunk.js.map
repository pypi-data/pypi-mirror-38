{"version":3,"file":"fce9b519a9b01ebf4fdd.chunk.js","sources":["webpack:///fce9b519a9b01ebf4fdd.chunk.js"],"sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{724:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,\"generateLovelaceConfig\",function(){return generateLovelaceConfig});var _common_entity_extract_views__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(168),_common_entity_get_view_entities__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(146),_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(27),_common_entity_split_by_groups__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(167),_common_entity_compute_object_id__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(125),_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(23),_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(73);const DOMAINS_BADGES=[\"binary_sensor\",\"device_tracker\",\"mailbox\",\"sensor\",\"sun\",\"timer\"],HIDE_DOMAIN=new Set([\"persistent_notification\",\"configurator\"]),computeCards=(title,states)=>{const cards=[],entities=[];for(const[entityId]of states){const domain=Object(_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_6__.a)(entityId);if(\"alarm_control_panel\"===domain){cards.push({type:\"alarm-panel\",entity:entityId})}else if(\"climate\"===domain){cards.push({type:\"thermostat\",entity:entityId})}else if(\"media_player\"===domain){cards.push({type:\"media-control\",entity:entityId})}else if(\"weather\"===domain){cards.push({type:\"weather-forecast\",entity:entityId})}else{entities.push(entityId)}}if(0<entities.length){cards.unshift({title,type:\"entities\",entities})}return cards},computeDefaultViewStates=hass=>{const states={};Object.keys(hass.states).forEach(entityId=>{const stateObj=hass.states[entityId];if(!stateObj.attributes.hidden&&!HIDE_DOMAIN.has(Object(_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_5__.a)(stateObj))){states[entityId]=hass.states[entityId]}});return states},generateViewConfig=(localize,id,title,icon,entities,groupOrders)=>{const splitted=Object(_common_entity_split_by_groups__WEBPACK_IMPORTED_MODULE_3__.a)(entities);splitted.groups.sort((gr1,gr2)=>groupOrders[gr1.entity_id]-groupOrders[gr2.entity_id]);const badgeEntities={},ungroupedEntitites={};Object.keys(splitted.ungrouped).forEach(entityId=>{const state=splitted.ungrouped[entityId],domain=Object(_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_5__.a)(state),coll=DOMAINS_BADGES.includes(domain)?badgeEntities:ungroupedEntitites;if(!(domain in coll)){coll[domain]=[]}coll[domain].push(state.entity_id)});let badges=[];DOMAINS_BADGES.forEach(domain=>{if(domain in badgeEntities){badges=badges.concat(badgeEntities[domain])}});let cards=[];splitted.groups.forEach(groupEntity=>{cards=cards.concat(computeCards(Object(_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__.a)(groupEntity),groupEntity.attributes.entity_id.map(entityId=>[entityId,entities[entityId]])))});Object.keys(ungroupedEntitites).sort().forEach(domain=>{cards=cards.concat(computeCards(localize(`domain.${domain}`),ungroupedEntitites[domain].map(entityId=>[entityId,entities[entityId]])))});return{id,title,icon,badges,cards}},generateLovelaceConfig=(hass,localize)=>{const viewEntities=Object(_common_entity_extract_views__WEBPACK_IMPORTED_MODULE_0__.a)(hass.states),views=viewEntities.map(viewEntity=>{const states=Object(_common_entity_get_view_entities__WEBPACK_IMPORTED_MODULE_1__.a)(hass.states,viewEntity),groupOrders={};Object.keys(states).forEach((entityId,idx)=>{groupOrders[entityId]=idx});return generateViewConfig(localize,Object(_common_entity_compute_object_id__WEBPACK_IMPORTED_MODULE_4__.a)(viewEntity.entity_id),Object(_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__.a)(viewEntity),viewEntity.attributes.icon,states,groupOrders)});let title=hass.config.location_name;if(0===viewEntities.length||viewEntities[0].entity_id!==\"group.default_view\"){const states=computeDefaultViewStates(hass),groupOrders={};Object.keys(states).forEach(entityId=>{const stateObj=states[entityId];if(stateObj.attributes.order){groupOrders[entityId]=stateObj.attributes.order}});views.unshift(generateViewConfig(localize,\"default_view\",\"Home\",void 0,states,groupOrders));if(1<views.length&&\"Home\"===title){title=\"Home Assistant\"}}return{_frontendAuto:!0,title,views}}}}]);"],"mappings":"AAAA","sourceRoot":""}