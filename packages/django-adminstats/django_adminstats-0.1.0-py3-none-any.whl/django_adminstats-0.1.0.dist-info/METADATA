Metadata-Version: 2.0
Name: django-adminstats
Version: 0.1.0
Summary: An adminstrative charting tool for statistics in Django
Home-page: https://gitlab.com/alantrick/django-adminstats
Author: Alan Trick
Author-email: me@alantrick.ca
License: LGPL
Project-URL: Bug Tracker, https://gitlab.com/alantrick/django-adminstats/issues
Project-URL: Source Code, https://gitlab.com/alantrick/django-adminstats
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.1
Classifier: Topic :: Utilities
Provides-Extra: docs
Provides-Extra: test
Requires-Dist: Django (>=1.10)
Requires-Dist: python-dateutil
Provides-Extra: docs
Requires-Dist: sphinx; extra == 'docs'
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-django; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-pythonpath; extra == 'test'
Requires-Dist: tox; extra == 'test'
Requires-Dist: django-trackstats; extra == 'test'
Requires-Dist: pyyaml; extra == 'test'

==================
Django Admin Stats
==================

|pipeline-badge| |coverage-badge| |pypi-badge|

Django Admin Stats allows you to create and display charts of your data
using the django admin. It uses `c3 <https://c3js.org/>`_ to display charts.

Features
--------

* Supports generating statistics from django models and from trackstats_
  metrics.
* Also allows for custom statistics generation by making your own
  ``Registration`` subclass.
* Nice JavaScript charts with c3, falls back to a plain table without
  JavaScript.

Limitations
-----------

* One dimension/axis of the chart is always the date. There's no way to
  specify a chart that isn’t “by date”.
* There’s no way to add filters to criteria on charts. The recommended
  workaround is to use trackstats and store those stats separately.

Installation
------------

Installation is straightforward. Install ``django-adminstats`` with pip, and
then add ``'django_adminstats',`` to your ``INSTALLED_APPS`` setting. You’ll
also want to register some models or trackstat metrics (see Example Code).

Example Code
------------

See ``tests/models.py``.

Demo
----

Just run ``make demo`` and log in with user ``admin`` and password ``admin``.


.. |pipeline-badge| image:: https://gitlab.com/alantrick/django-adminstats/badges/master/pipeline.svg
   :target: https://gitlab.com/alantrick/django-adminstats/
   :alt: Build Status

.. |coverage-badge| image:: https://gitlab.com/alantrick/django-adminstats/badges/master/coverage.svg
   :target: https://gitlab.com/alantrick/django-adminstats/
   :alt: Coverage Status

.. |pypi-badge| image:: https://img.shields.io/pypi/v/django_adminstats.svg
   :target: https://pypi.org/project/django-adminstats/
   :alt: Project on PyPI

.. _trackstats: https://pypi.org/project/django-trackstats/



