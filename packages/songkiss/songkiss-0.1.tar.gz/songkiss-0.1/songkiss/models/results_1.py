# -*- coding: utf-8 -*-

"""
    songkiss

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import songkiss.models.event

class Results1(object):

    """Implementation of the 'Results1' model.

    TODO: type model description here.

    Attributes:
        event (list of Event): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "event":'event'
    }

    def __init__(self,
                 event=None):
        """Constructor for the Results1 class"""

        # Initialize members of the class
        self.event = event


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        event = None
        if dictionary.get('event') != None:
            event = list()
            for structure in dictionary.get('event'):
                event.append(songkiss.models.event.Event.from_dictionary(structure))

        # Return an object of this model
        return cls(event)


