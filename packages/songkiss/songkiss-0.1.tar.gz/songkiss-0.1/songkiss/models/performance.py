# -*- coding: utf-8 -*-

"""
    songkiss

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import songkiss.models.artist_1

class Performance(object):

    """Implementation of the 'Performance' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        display_name (string): TODO: type description here.
        billing (string): TODO: type description here.
        billing_index (int): TODO: type description here.
        artist (Artist1): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "display_name":'displayName',
        "billing":'billing',
        "billing_index":'billingIndex',
        "artist":'artist'
    }

    def __init__(self,
                 id=None,
                 display_name=None,
                 billing=None,
                 billing_index=None,
                 artist=None):
        """Constructor for the Performance class"""

        # Initialize members of the class
        self.id = id
        self.display_name = display_name
        self.billing = billing
        self.billing_index = billing_index
        self.artist = artist


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        display_name = dictionary.get('displayName')
        billing = dictionary.get('billing')
        billing_index = dictionary.get('billingIndex')
        artist = songkiss.models.artist_1.Artist1.from_dictionary(dictionary.get('artist')) if dictionary.get('artist') else None

        # Return an object of this model
        return cls(id,
                   display_name,
                   billing,
                   billing_index,
                   artist)


