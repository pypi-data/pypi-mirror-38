[tox]
minversion = 1.6
envlist =
    coala,
    docs,
    docs-linkcheck,
    flake8,
    py27,
    py34,
    py35,
    py36,
skipsdist = true
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:True}

[testenv]
deps = -r{toxinidir}/test-requirements.txt
whitelist_externals = find
commands =
    find odltools -type f -name "*.pyc" -delete
    python -m unittest discover -v

[testenv:coala]
basepython = python3
deps =
    coala
    coala-bears
    # nodeenv==1.1.2 # nodeenv and npm used for WriteGoodLintBear
commands =
    # nodeenv -p
    # npm install --global remark-cli remark-lint write-good
    python3 -m nltk.downloader punkt maxent_treebank_pos_tagger averaged_perceptron_tagger
    coala --non-interactive

[testenv:flake8]
basepython = python3
deps = flake8~=3.5.0
commands = flake8
skip_install = True

[flake8]
max-line-length = 120
exclude = build, dist, .tox, .github, *.egg, docs

[testenv:docs]
deps = -rdocs/requirements.txt
commands = sphinx-build -W -n -b html -d {envtmpdir}/doctrees {toxinidir}/docs {envtmpdir}/html

[testenv:docs-linkcheck]
deps = {[testenv:docs]deps}
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees {toxinidir}/docs {envtmpdir}/linkcheck

[testenv:bist]
basepython = python3
deps = -r{toxinidir}/requirements.txt
commands = python -m odltools bist {posargs}
