from os import path

from intermake import Controller
from mhelper import file_helper, TTristate
from neocommand.endpoints.abstract_endpoints import Destination, AbstractFileDestination
from neocommand.helpers.resolver import EdgeNodeDict


class VisJsEndpoint( Destination ):
    def __init__( self, name, file_name, overwrite ):
        super().__init__( name )
        self.file_name = file_name
        self.overwrite: TTristate = overwrite
    
    
    def __str__( self ) -> str:
        return "Visjs: {}".format( self.file_name )
    
    
    def on_open_writer( self ):
        return _VisJsEndpointWriter( self.file_name, self.overwrite )


class _VisJsEndpointWriter( AbstractFileDestination ):
    def on_get_file_type( self ) -> str:
        return "VISJS"
    
    
    def on_create_content( self, data: EdgeNodeDict ) -> str:
        HTML_T = file_helper.read_all_text( path.join( file_helper.get_directory( __file__, 2 ), "misc_resources", "vis_js_template.html" ) )
        
        HTML_T = HTML_T.replace( "$(TITLE)", Controller.ACTIVE.app.name + " " + self.on_get_file_type() + " endpoint: '" + self.name + "'" )
        HTML_T = HTML_T.replace( "$(COMMENT)", "File automatically generated by NeoCommand/BIO42. Please replace this line with your own description." )
        
        r = []
        
        for node, node_id in data.nodes_and_ids:
            # {id: 1, label: 'NcNode 1'},
            r.append( "{id: " + str( node_id ) + ", label: '" + node.uid + "'}," )
        
        HTML_T = HTML_T.replace( "$(NODES)", "\n".join( r ) )
        
        r = []
        
        for edge, edge_id, start_id, end_id in data.edges_and_ids:
            # "{from: 1, to: 3},"
            r.append( "{from: " + start_id + ", to: " + end_id + "}," )
        
        HTML_T = HTML_T.replace( "$(EDGES)", "\n".join( r ) )
        
        return HTML_T
