# MMC3 board with max. 8 FEI4s with multiple TX
ETH:
    ip : "192.168.10.11"
    udp_port : 4660
    tcp_port : 24
    tcp_connection : True
    tcp_to_bus : False

# Trigger
TRIGGER_CH0:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 1  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH1:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 4  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH2:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 8  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH3:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 16  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH4:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 32  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH5:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 64  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH6:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 128  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

TRIGGER_CH7:
    TRIGGER_MODE                         : 0  # Selecting trigger mode: Use trigger inputs/trigger select (0), TLU no handshake (1), TLU simple handshake (2), TLU data handshake (3)
    TRIGGER_SELECT                       : 256  # Selecting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_INVERT                       : 0  # Inverting trigger input: MonHit/HitOR from module 0/1/2/3/4/5/6/7 (2/4/8/16/32/64/128/256), LEMO RX0 (1), disabled (0)
    TRIGGER_VETO_SELECT                  : 1  # Selecting trigger veto: RX FIFO 0/1/2/3/4/4/6/7 full (2/4/8/16/32/64/128/256), FIFO full (1), disabled (0)
    TRIGGER_HANDSHAKE_ACCEPT_WAIT_CYCLES : 3  # Increasing minimum trigger length in TLU data handshale mode (preventing certain TLU flaws)
    TRIGGER_DATA_DELAY                   : 8  # TLU data handshake data delay depends on the cable length and should be adjusted with a delay scan (run scan/tune_tlu.py)
    TRIGGER_THRESHOLD                    : 0  # Standard trigger minimum length in clock cycles of the trigger/TLU FSM
    DATA_FORMAT                          : 0  # 31bit trigger number according to TRIGGER_MODE (0), 31bit time stamp (1), 15bit time stamp + 16bit trigger number (2)

# TDC for high precision charge measurements
TDC_CH0:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH1:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH2:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH3:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH4:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH5:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

TDC_CH6:
    EN_WRITE_TIMESTAMP   : 1  # Writing trigger timestamp
    EN_TRIGGER_DIST      : 0  # Measuring trigger to TDC delay with 640MHz clock
    EN_NO_WRITE_TRIG_ERR : 0  # Writing TDC word only if valid trigger occurred
    EN_INVERT_TDC        : 0  # Inverting TDC input
    EN_INVERT_TRIGGER    : 0  # Inverting trigger input

# FE-I4 command output
CMD_CH0:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH1:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH2:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH3:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH4:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH5:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH6:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

CMD_CH7:
    OUTPUT_MODE : 3  # Selecting command output mode: positive edge (0), negative edge (1), Manchester Code according to IEEE 802.3 (2), Manchester Code according to G.E. Thomas (3)

# FE-I4 data receivers
DATA_CH0:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH1:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH2:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH3:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH4:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH5:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH6:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)

DATA_CH7:
    INVERT_RX : 0  # Inverting data input: disabled (0), enabled (e.g. for DBM modules) (1)
