cache:
  pip: true
  directories:
    - $HOME/.cache/pip
    - $HOME/.local

language: python

matrix:
  include:
    #- os: linux
      #python: 2.7
    - os: linux
      python: 3.3
    - os: linux
      python: 3.4
    - os: linux
      python: 3.5
    - os: linux
      python: 3.6
    - os: osx
      language: generic

before_install:
  - git submodule update --init --recursive
  #- if [ $TRAVIS_OS_NAME == linux ]; then
      #sudo apt-get update -qq;
      #sudo apt-get install -qq python-pip;
      #pip install -r requirements.txt;
    #fi
  - if [ $TRAVIS_OS_NAME == linux ]; then apt-cache policy zlib*; fi
  #- if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew bundle; fi


install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > miniconda.sh;
      export TRAVIS_PYTHON_VERSION="3.6";
    elif [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda info -a

  #- conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  #- source activate test-environment
  #- export MSP_CONDA_PREFIX="$HOME/miniconda/envs/test-environment"

  #- conda install --yes --file=requirements/conda-minimal.txt
  - conda install --yes --file=requirements.txt
  #- pip install -r requirements/tests-pypi.txt
  - make


  ## We need to run build_ext here first as odd things happen with the tests on
  ## version numbers otherwise.
  #- python setup.py build_ext
  #- pip install .



script:
  - nosetests -vs
