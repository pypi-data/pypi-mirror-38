Metadata-Version: 2.1
Name: asphalt-serialization
Version: 4.0.3
Summary: Serialization component for the Asphalt framework
Home-page: https://github.com/asphalt-framework/asphalt-serialization
Author: Alex Gr√∂nholm
Author-email: alex.gronholm@nextday.fi
License: Apache License 2.0
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Dist: asphalt (<5.0,>=3.0)
Requires-Dist: typeguard (~=2.0)
Provides-Extra: cbor
Requires-Dist: cbor2 (~=4.0) ; extra == 'cbor'
Provides-Extra: doc
Requires-Dist: Sphinx (>=1.5) ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme ; extra == 'doc'
Requires-Dist: sphinx-autodoc-typehints (>=1.0.5) ; extra == 'doc'
Requires-Dist: sphinxcontrib-asyncio (>=0.2.0) ; extra == 'doc'
Provides-Extra: msgpack
Requires-Dist: msgpack (>=0.5.2) ; extra == 'msgpack'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: pytest-asyncio (>=0.5.0) ; extra == 'test'
Provides-Extra: yaml
Requires-Dist: ruamel.yaml (>=0.12) ; extra == 'yaml'

.. image:: https://travis-ci.org/asphalt-framework/asphalt-serialization.svg?branch=master
  :target: https://travis-ci.org/asphalt-framework/asphalt-serialization
  :alt: Build Status
.. image:: https://coveralls.io/repos/github/asphalt-framework/asphalt-serialization/badge.svg?branch=master
  :target: https://coveralls.io/github/asphalt-framework/asphalt-serialization?branch=master
  :alt: Code Coverage

This Asphalt framework component provides a standardized interface for a number of different
serialization algorithms:

* CBOR_ (using `cbor2 <http://pypi.python.org/pypi/cbor2>`_)
* JSON_ (using the Python standard library ``json`` module)
* msgpack_ (using `msgpack-python <https://pypi.python.org/pypi/msgpack-python>`_)
* Pickle_ (using the Python standard library ``pickle`` module)
* YAML_ (using `PyYAML <https://pypi.python.org/pypi/PyYAML>`_)

Additional backends may be provided through third party plugins.

Some serializers also provide hooks for safely (un)marshalling custom types and this mechanism
can easily be plugged into a third party marshalling library.

.. _CBOR: http://cbor.io/
.. _JSON: http://wikipedia.org/wiki/JSON
.. _msgpack: http://msgpack.org/
.. _Pickle: https://docs.python.org/3/library/pickle.html
.. _YAML: http://wikipedia.org/wiki/YAML

Project links
-------------

* `Documentation <http://asphalt-serialization.readthedocs.org/>`_
* `Help and support <https://github.com/asphalt-framework/asphalt/wiki/Help-and-support>`_
* `Source code <https://github.com/asphalt-framework/asphalt-serialization>`_
* `Issue tracker <https://github.com/asphalt-framework/asphalt-serialization/issues>`_


