# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class SecurityConfiguration(pulumi.CustomResource):
    """
    Manages a Glue Security Configuration.
    """
    def __init__(__self__, __name__, __opts__=None, encryption_configuration=None, name=None):
        """Create a SecurityConfiguration resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not encryption_configuration:
            raise TypeError('Missing required property encryption_configuration')
        elif not isinstance(encryption_configuration, dict):
            raise TypeError('Expected property encryption_configuration to be a dict')
        __self__.encryption_configuration = encryption_configuration
        """
        Configuration block containing encryption configuration. Detailed below.
        """
        __props__['encryptionConfiguration'] = encryption_configuration

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Name of the security configuration.
        """
        __props__['name'] = name

        super(SecurityConfiguration, __self__).__init__(
            'aws:glue/securityConfiguration:SecurityConfiguration',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'encryptionConfiguration' in outs:
            self.encryption_configuration = outs['encryptionConfiguration']
        if 'name' in outs:
            self.name = outs['name']
