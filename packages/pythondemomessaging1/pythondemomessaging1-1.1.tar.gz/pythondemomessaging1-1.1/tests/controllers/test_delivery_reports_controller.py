# -*- coding: utf-8 -*-

"""
    pythondemomessaging1

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import jsonpickle
import dateutil.parser
from .controller_test_base import ControllerTestBase
from ..test_helper import TestHelper
from pythondemomessaging1.api_helper import APIHelper


class DeliveryReportsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(DeliveryReportsControllerTests, cls).setUpClass()
        cls.controller = cls.api_client.delivery_reports

    # Check for any delivery reports that have been received.
    #Delivery reports are a notification of the change in status of a message as it is being processed.
    #Each request to the check delivery reports endpoint will return any delivery reports received that
    #have not yet been confirmed using the confirm delivery reports endpoint. A response from the check
    #delivery reports endpoint will have the following structure:
    #```json
    #{
    #    "delivery_reports": [
    #        {
    #            "callback_url": "https://my.callback.url.com",
    #            "delivery_report_id": "01e1fa0a-6e27-4945-9cdb-18644b4de043",
    #            "source_number": "+61491570157",
    #            "date_received": "2017-05-20T06:30:37.642Z",
    #            "status": "enroute",
    #            "delay": 0,
    #            "submitted_date": "2017-05-20T06:30:37.639Z",
    #            "original_text": "My first message!",
    #            "message_id": "d781dcab-d9d8-4fb2-9e03-872f07ae94ba",
    #            "vendor_account_id": {
    #                "vendor_id": "MessageMedia",
    #                "account_id": "MyAccount"
    #            },
    #            "metadata": {
    #                "key1": "value1",
    #                "key2": "value2"
    #            }
    #        },
    #        {
    #            "callback_url": "https://my.callback.url.com",
    #            "delivery_report_id": "0edf9022-7ccc-43e6-acab-480e93e98c1b",
    #            "source_number": "+61491570158",
    #            "date_received": "2017-05-21T01:46:42.579Z",
    #            "status": "enroute",
    #            "delay": 0,
    #            "submitted_date": "2017-05-21T01:46:42.574Z",
    #            "original_text": "My second message!",
    #            "message_id": "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281",
    #            "vendor_account_id": {
    #                "vendor_id": "MessageMedia",
    #                "account_id": "MyAccount"
    #            },
    #            "metadata": {
    #                "key1": "value1",
    #                "key2": "value2"
    #            }
    #        }
    #    ]
    #}
    #```
    #Each delivery report will contain details about the message, including any metadata specified
    #and the new status of the message (as each delivery report indicates a change in status of a
    #message) and the timestamp at which the status changed. Every delivery report will have a
    #unique delivery report ID for use with the confirm delivery reports endpoint.
    #*Note: The source number and destination number properties in a delivery report are the inverse of
    #those specified in the message that the delivery report relates to. The source number of the
    #delivery report is the destination number of the original message.*
    #Subsequent requests to the check delivery reports endpoint will return the same delivery reports
    #and a maximum of 100 delivery reports will be returned in each request. Applications should use the
    #confirm delivery reports endpoint in the following pattern so that delivery reports that have been
    #processed are no longer returned in subsequent check delivery reports requests.
    #1. Call check delivery reports endpoint
    #2. Process each delivery report
    #3. Confirm all processed delivery reports using the confirm delivery reports endpoint
    #*Note: It is recommended to use the Webhooks feature to receive reply messages rather than
    #polling the check delivery reports endpoint.*
    def test_check_delivery_reports_1(self):

        # Perform the API call through the SDK function
        result = self.controller.get_check_delivery_reports()

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        self.assertEqual('{    "delivery_reports": [        {            "callback_url": "https://my.callback.url.com",            "delivery_report_id": "01e1fa0a-6e27-4945-9cdb-18644b4de043",            "source_number": "+61491570157",            "date_received": "2017-05-20T06:30:37.642Z",            "status": "enroute",            "delay": 0,            "submitted_date": "2017-05-20T06:30:37.639Z",            "original_text": "My first message!",            "message_id": "d781dcab-d9d8-4fb2-9e03-872f07ae94ba",            "vendor_account_id": {                "vendor_id": "MessageMedia",                "account_id": "MyAccount"            },            "metadata": {                "key1": "value1",                "key2": "value2"            }        },        {            "callback_url": "https://my.callback.url.com",            "delivery_report_id": "0edf9022-7ccc-43e6-acab-480e93e98c1b",            "source_number": "+61491570158",            "date_received": "2017-05-21T01:46:42.579Z",            "status": "enroute",            "delay": 0,            "submitted_date": "2017-05-21T01:46:42.574Z",            "original_text": "My second message!",            "message_id": "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281",            "vendor_account_id": {                "vendor_id": "MessageMedia",                "account_id": "MyAccount"            },            "metadata": {                "key1": "value1",                "key2": "value2"            }        }    ]}', self.response_catcher.response.raw_body)


