# coding=utf-8
""" Add customer model and related relationship and configurations, role definitions

Revision ID: d0bbf6c460f5
Revises: f1603288979d
Create Date: 2016-02-29 15:32:21.767916

"""

# revision identifiers, used by Alembic.
revision = 'd0bbf6c460f5'
down_revision = 'f1603288979d'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    from sqlalchemy.sql import text
    op.create_table('customer',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=32), nullable=True),
                    sa.Column('last_name', sa.String(length=32), nullable=True),
                    sa.Column('mobile_phone', sa.String(length=32), nullable=True),
                    sa.Column('email', sa.String(length=64), nullable=True),
                    sa.Column('address', sa.String(length=64), nullable=True),
                    sa.Column('birthday', sa.DateTime(), nullable=True),
                    sa.Column('join_date', sa.DateTime(), nullable=False),
                    sa.Column('points', sa.Integer(), nullable=False),
                    sa.Column('join_channel_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['join_channel_id'], ['enum_values.id'], ),
                    sa.Column('level_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['level_id'], ['enum_values.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column(u'sales_order', sa.Column('customer_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'sales_order', 'customer', ['customer_id'], ['id'])
    enum_values_table = sa.table('enum_values',
                                 sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                 sa.Column('type_id', sa.Integer(), nullable=True),
                                 sa.Column('code', sa.String(length=32), nullable=True),
                                 sa.Column('display', sa.String(length=64), nullable=False),
                                 )
    res = op.get_bind().execute('SELECT max(id)+1 FROM enum_values')
    results = res.fetchall()
    cm = 29
    for r in results:
        cm = r[0]
    op.bulk_insert(enum_values_table, [
        {'id': cm, 'type_id': 1, 'code': 'CUSTOMER_JOIN_CHANNEL', 'display': u'会员注册渠道'},
        {'id': cm + 1, 'type_id': 1, 'code': 'CUSTOMER_LEVEL', 'display': u'会员级别'},
        {'id': cm + 2, 'type_id': cm, 'code': 'CUSTOMER_JOIN_STORE_CHANNEL', 'display': u'实体店加入'},
        {'id': cm + 3, 'type_id': cm, 'code': 'CUSTOMER_JOIN_WEB_STORE_CHANNEL', 'display': u'网店(微信)加入'},
        {'id': cm + 4, 'type_id': cm, 'code': 'CUSTOMER_JOIN_INTRODUCE_CHANNEL', 'display': u'朋友介绍'},
        {'id': cm + 6, 'type_id': cm + 1, 'code': 'CUSTOMER_LEVEL_BASIC', 'display': u'基本会员'},
        {'id': cm + 7, 'type_id': cm + 1, 'code': 'CUSTOMER_LEVEL_SILVER', 'display': u'银卡会员'},
        {'id': cm + 8, 'type_id': cm + 1, 'code': 'CUSTOMER_LEVEL_GOLDEN', 'display': u'金卡会员'},
        {'id': cm + 9, 'type_id': cm + 1, 'code': 'CUSTOMER_LEVEL_PLATINUM', 'display': u'白金卡会员'},
        {'id': cm + 10, 'type_id': cm + 1, 'code': 'CUSTOMER_LEVEL_LIFETIME_PLATINUM', 'display': u'终生白金卡会员'},
    ], multiinsert=False)
    op.get_bind().execute(text("ALTER SEQUENCE enum_values_id_seq RESTART WITH " + str(cm + 11) + ";"))
    role_table = sa.table('role',
                          sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                          sa.Column('name', sa.String(length=80), nullable=True),
                          sa.Column('description', sa.String(length=255), nullable=True),
                          )
    res = op.get_bind().execute('SELECT max(id)+1 FROM role')
    results = res.fetchall()
    rm = 45
    for r in results:
        rm = r[0]
    op.bulk_insert(role_table, [
        {'id': rm, 'name': 'customer_view', 'description': 'View customers'},
        {'id': rm + 1, 'name': 'customer_create', 'description': 'Create customers'},
        {'id': rm + 2, 'name': 'customer_edit', 'description': 'Edit customers'},
        {'id': rm + 3, 'name': 'customer_delete', 'description': 'Delete customers'},
    ], multiinsert=False)
    op.get_bind().execute(text("ALTER SEQUENCE role_id_seq RESTART WITH " + str(rm + 4) + ";"))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sales_order', type_='foreignkey')
    op.drop_column(u'sales_order', 'customer_id')
    op.drop_table('customer')
    ### end Alembic commands ###
