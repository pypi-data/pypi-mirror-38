"""Add table and seed user/role (admin) for flask_security

Revision ID: 2a3fee7de8d4
Revises: 29b31f4d8de6
Create Date: 2015-06-27 01:53:52.021040

"""

# revision identifiers, used by Alembic.

revision = '2a3fee7de8d4'
down_revision = '29b31f4d8de6'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    import flask_security.utils as security_utils
    role_table = op.create_table('role',
                                 sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                 sa.Column('name', sa.String(length=80), nullable=True),
                                 sa.Column('description', sa.String(length=255), nullable=True),
                                 sa.PrimaryKeyConstraint('id'),
                                 sa.UniqueConstraint('name')
                                 )
    op.bulk_insert(role_table, [
        {'id': 1, 'name': 'admin', 'description': 'admin role'},
    ], multiinsert=False)
    from sqlalchemy.sql import text
    op.get_bind().execute(text("ALTER SEQUENCE role_id_seq RESTART WITH 2;"))
    user_table = op.create_table('user',
                                 sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                 sa.Column('login', sa.String(length=64), nullable=False, unique=True),
                                 sa.Column('display', sa.String(length=255), nullable=False),
                                 sa.Column('email', sa.String(length=255), nullable=True),
                                 sa.Column('password', sa.String(length=255), nullable=True),
                                 sa.Column('active', sa.Boolean(), nullable=True),
                                 sa.PrimaryKeyConstraint('id'),
                                 sa.UniqueConstraint('email')
                                 )
    hashed_password = security_utils.hash_password('password')
    op.bulk_insert(user_table, [
        {'id': 1, 'login': 'admin', 'display': 'Administrator',
         'email': 'support@betterlife.io',
         'password': hashed_password,
         'active': True},
    ], multiinsert=False)
    op.get_bind().execute(text("ALTER SEQUENCE user_id_seq RESTART WITH 2;"))
    roles_users_table = op.create_table('roles_users',
                                        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                        sa.Column('user_id', sa.Integer(), nullable=True),
                                        sa.Column('role_id', sa.Integer(), nullable=True),
                                        sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
                                        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                                        sa.PrimaryKeyConstraint('id'),
                                        )
    op.bulk_insert(roles_users_table, [
        {'id': 1, 'user_id': 1, 'role_id': 1},
    ], multiinsert=False)
    op.get_bind().execute(text("ALTER SEQUENCE roles_users_id_seq RESTART WITH 2;"))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_table('user')
    op.drop_table('role')
    ### end Alembic commands ###
