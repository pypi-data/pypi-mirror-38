Metadata-Version: 2.1
Name: leuvenmapmatching
Version: 0.5.3
Summary: Match a trace of locations to a map
Home-page: https://dtai.cs.kuleuven.be
Author: Wannes Meert
Author-email: wannes.meert@cs.kuleuven.be
License: Apache 2.0
Keywords: map matching
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.6
Provides-Extra: db
Provides-Extra: all
Provides-Extra: vis
Requires-Dist: numpy
Requires-Dist: scipy
Provides-Extra: all
Requires-Dist: smopy; extra == 'all'
Requires-Dist: matplotlib (>=2.0.0); extra == 'all'
Requires-Dist: rtree; extra == 'all'
Requires-Dist: pyproj; extra == 'all'
Requires-Dist: nvector (==0.5.2); extra == 'all'
Requires-Dist: gpxpy; extra == 'all'
Requires-Dist: pykalman; extra == 'all'
Provides-Extra: db
Requires-Dist: rtree; extra == 'db'
Requires-Dist: pyproj; extra == 'db'
Provides-Extra: vis
Requires-Dist: smopy; extra == 'vis'
Requires-Dist: matplotlib (>=2.0.0); extra == 'vis'

Leuven.MapMatching
==================

Align a trace of GPS measurements to a map or road segments.

The matching is based on a Hidden Markov Model (HMM) with non-emitting
states. The model can deal with missing data and you can plug in custom
transition and emission probability distributions.

.. figure:: http://people.cs.kuleuven.be/wannes.meert/leuvenmapmatching/example1.png?v=2
   :alt: example

   example

Reference:

    Meert Wannes, Mathias Verbeke, "HMM with Non-Emitting States for Map
    Matching", European Conference on Data Analysis (ECDA), Paderborn,
    Germany, 2018.

Installation and usage
----------------------

::

    $ pip install leuvenmapmatching

More information and examples:

`leuvenmapmatching.readthedocs.io <https://leuvenmapmatching.readthedocs.io>`__

Dependencies
------------

Required:

-  `numpy <http://www.numpy.org>`__
-  `scipy <https://www.scipy.org>`__

Optional (only loaded when methods are called to rely on these
packages):

-  `matplotlib <http://matplotlib.org>`__: For visualisation
-  `smopy <https://github.com/rossant/smopy>`__: For visualisation
-  `nvector <https://github.com/pbrod/Nvector>`__: For
   latitude-longitude computations
-  `gpxpy <https://github.com/tkrajina/gpxpy>`__: To import GPX files
-  `pykalman <https://pykalman.github.io>`__: So smooth paths using a
   Kalman filter
-  `pyproj <https://jswhit.github.io/pyproj/>`__: To project
   latitude-longitude coordinates to an XY-plane
-  `rtree <http://toblerity.org/rtree/>`__: To quickly search locations

Contact
-------

| Wannes Meert, DTAI, KU Leuven
| wannes.meert@cs.kuleuven.be
| https://dtai.cs.kuleuven.be

| Mathias Verbeke, Sirris
| mathias.verbeke@sirris.be
| http://www.sirris.be/expertise/data-innovation

Developed with the support of
`Elucidata.be <http://www.elucidata.be>`__.

License
-------

| Copyright 2015-2018, KU Leuven - DTAI Research Group, Sirris -
  Elucidata Group
| Apache License, Version 2.0.


